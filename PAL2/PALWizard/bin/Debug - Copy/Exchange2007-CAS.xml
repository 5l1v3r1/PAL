<PAL NAME="Microsoft Exchange 2007 - CAS" DESCRIPTION="Use this for general analysis of the Exchange 2007 CAS Role. For the latest XML updates for this tool, go to http://blogs.technet.com/mikelag/archive/2008/08/20/xml-updates-for-the-pal-tool.aspx&#xD;&#xA;" CONTENTOWNERS="Mike Lagase" FEEDBACKEMAILADDRESS="paltool@microsoft.com;mikelag@microsoft.com" VERSION="1.0" PALVERSION="2.0" LANGUAGE="English" LANGUAGECODE="en">
  <INHERITANCE FILEPATH="QuickSystemOverview.xml" />
  <INHERITANCE FILEPATH="IIS.xml" />
  <ANALYSIS NAME="LogicalDisk Read Latency Analysis" ENABLED="True" CATEGORY="LogicalDisk" PRIMARYDATASOURCE="\LogicalDisk(*)\Avg. Disk sec/Read" ID="{dfb21d00-cf83-49e7-bf63-3d82db3d63c3}" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(*)\Avg. Disk sec/Read" COLLECTIONVARNAME="LogicalDiskAvgDisksecReadALL" EXPRESSIONPATH="\LogicalDisk(*)\Avg. Disk sec/Read" DATATYPE="round3">
      <EXCLUDE INSTANCE="_Total" />
    </DATASOURCE>
    <THRESHOLD NAME="Greater than 10ms logical disk READ response times" CONDITION="Warning" COLOR="#FFFF00" PRIORITY="52" ID="">
      <CODE><![CDATA[StaticThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecReadALL -Operator 'gt' -Threshold 0.010
         ]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="Greater than 20ms logical disk READ response times" CONDITION="Critical" COLOR="Red" PRIORITY="100" ID="">
      <DESCRIPTION><![CDATA[ ]]></DESCRIPTION>
      <CODE><![CDATA[
        StaticThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecReadALL -Operator 'gt' -Threshold 0.020
        ]]></CODE>
    </THRESHOLD>
    <CHART CHARTTITLE="\LogicalDisk(*)\Avg. Disk sec/Read" ISTHRESHOLDSADDED="True" DATASOURCE="\LogicalDisk(*)\Avg. Disk sec/Read" CHARTLABELS="instance">
      <SERIES NAME="Warning">
        <CODE><![CDATA[
          StaticChartThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecReadALL -MinThreshold 0.010 -MaxThreshold 0.020 -UseMaxValue $False
        ]]></CODE>
      </SERIES>
      <SERIES NAME="Critical">
        <CODE><![CDATA[
          StaticChartThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecReadALL -MinThreshold 0.020 -MaxThreshold 0.029999 -UseMaxValue $True
        ]]></CODE>
      </SERIES>
    </CHART>
    <DESCRIPTION><![CDATA[Avg. Disk sec/Read is the average time, in seconds, of a read of data to the disk. This analysis determines if any of the physical disks are responding slowly.<BR>
<BR>
If the response times are greater than <B>.010 (10 milliseconds)</B>, then the disk subsystem is keeping up with demand, but does not have much overhead left.<BR>
<BR>
If the response times are greater than <B>.020 (20 milliseconds)</B>, then noticeable slow downs and performance issues affecting users may be occurring.<BR>
<BR>
<B>Reference:</B><BR>
Ruling Out Disk-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx">http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx</A><BR>
Monitoring Mailbox Servers<BR>
<A HREF="http://technet.microsoft.com/en-us/library/bb201689(EXCHG.80).aspx">http://technet.microsoft.com/en-us/library/bb201689(EXCHG.80).aspx</A><BR>]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="LogicalDisk Write Latency Analysis" ENABLED="True" CATEGORY="LogicalDisk" PRIMARYDATASOURCE="\LogicalDisk(*)\Avg. Disk sec/Write" ID="{28eaa0b2-0bc2-41f8-8c27-9045b597d001}" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(*)\Avg. Disk sec/Write" COLLECTIONVARNAME="LogicalDiskAvgDisksecWriteALL" EXPRESSIONPATH="\LogicalDisk(*)\Avg. Disk sec/Write" DATATYPE="round3">
      <EXCLUDE INSTANCE="_Total" />
    </DATASOURCE>
    <THRESHOLD NAME="Greater than 10ms logical disk WRITE response times" CONDITION="Warning" COLOR="Yellow" PRIORITY="50" ID="">
      <DESCRIPTION><![CDATA[ ]]></DESCRIPTION>
      <CODE><![CDATA[
         StaticThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecWriteALL -Operator 'gt' -Threshold 0.010
         ]]></CODE>
    </THRESHOLD>
    <THRESHOLD NAME="Greater than 20ms logical disk WRITE response times" CONDITION="Critical" COLOR="Red" PRIORITY="100" ID="">
      <DESCRIPTION><![CDATA[ ]]></DESCRIPTION>
      <CODE><![CDATA[
        StaticThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecWriteALL -Operator 'gt' -Threshold 0.020
        ]]></CODE>
    </THRESHOLD>
    <CHART CHARTTITLE="\LogicalDisk(*)\Avg. Disk sec/Write" ISTHRESHOLDSADDED="True" DATASOURCE="\LogicalDisk(*)\Avg. Disk sec/Write" CHARTLABELS="instance">
      <SERIES NAME="Warning">
        <CODE><![CDATA[StaticChartThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecWriteALL -MinThreshold 0.010 -MaxThreshold 0.020 -UseMaxValue $False        ]]></CODE>
      </SERIES>
      <SERIES NAME="Critical">
        <CODE><![CDATA[StaticChartThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecWriteALL -MinThreshold 0.020 -MaxThreshold 0.029999 -UseMaxValue $True]]></CODE>
      </SERIES>
    </CHART>
    <THRESHOLD NAME="Greater than 900ms - Slower than a 3.5 inch floppy drive" CONDITION="Critical" COLOR="Red" PRIORITY="100">
      <DESCRIPTION><![CDATA[]]></DESCRIPTION>
      <CODE><![CDATA[#// Use PowerShell code to create alerts when the conditions for this threshold are met.
#// Optionally use the variables listed above in the Variables list box.
#// If the condition for this threshold is a static value, then use the StaticThreshold() function.
#// Otherwise, you will need to manually loop through the counter instance collection object.
#// The counter instance collection object has a unique name for each counter data source in this analysis.
#// See the variables in the Variables list box above for more information on the counter instance collection object.

#// Here is a ready to use example on how to use the StaticThreshold() function to define a threshold:
StaticThreshold -CollectionOfCounterInstances $LogicalDiskAvgDisksecWriteALL -Operator 'gt' -Threshold 0.9
#// The -Operator parameter accepts gt for greater than, ge for greater than or equal to, lt for less than,
#//  and le for less than or equal to. -Threshold is the static value for the threshold.]]></CODE>
    </THRESHOLD>
    <DESCRIPTION><![CDATA[Avg. Disk sec/Write is the average time, in seconds, of a write of data to the disk. This analysis determines if any of the physical disks are responding slowly.<BR>
<BR>
If the response times are greater than <B>.010 (15 milliseconds)</B>, then the disk subsystem is keeping up with demand, but does not have much overhead left.<BR>
<BR>
If the response times are greater than <B>.020 (25 milliseconds)</B>, then noticeable slow downs and performance issues affecting users may be occurring.<BR>
<BR>
<B>Reference:</B><BR>
Ruling Out Disk-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx">http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx</A><BR>
Monitoring Mailbox Servers<BR>
<A HREF="http://technet.microsoft.com/en-us/library/bb201689(EXCHG.80).aspx">http://technet.microsoft.com/en-us/library/bb201689(EXCHG.80).aspx</A><BR>
<BR>]]></DESCRIPTION>
  </ANALYSIS>
  <ANALYSIS NAME="Processor Utilization Analysis" ENABLED="True" CATEGORY="Processor" PRIMARYDATASOURCE="\Processor(*)\% Processor Time" ID="{ebbc6ee6-a4e0-4d1e-8d05-921d7867ab50}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[% Processor Time is the percentage of elapsed time that the processor spends to execute a non-Idle thread. It is calculated by measuring the duration of the idle thread is active in the sample interval, and subtracting that time from interval duration.  (Each processor has an idle thread that consumes cycles when no other threads are ready to run). This counter is the primary indicator of processor activity, and displays the average percentage of busy time observed during the sample interval. It is calculated by monitoring the time that the service is inactive, and subtracting that value from 100%.

This analysis checks for utilization greater than 60% on each individual processor. If so, determine if it is high user mode CPU or high privileged mode. If high privileged mode CPU is suspected, then see the Privileged Mode CPU Analysis. If a user-mode processor bottleneck is suspected, then consider using a process profiler to analyze the functions causing the high CPU consumption. See â€œHow To: Identify Functions causing a High User-mode CPU Bottleneck for Server Applications in a Production Environmentâ€ article in the references section for more information.<BR>
<BR>
If a user-mode processor bottleneck is suspected, then consider using a process profiler to analyze the functions causing the high CPU consumption. See â€œHow To: Identify Functions causing a High User-mode CPU Bottleneck for Server Applications in a Production Environmentâ€ article in the references section for more information.<BR>
<BR>
<B>References:</B><BR>
Measuring .NET Application Performance<BR>
http://msdn2.microsoft.com/en-us/library/ms998579.aspx<BR>
<BR>
How To: Identify Functions causing a High User-mode CPU Bottleneck for Server Applications in a Production Environment http://www.codeplex.com/PerfTesting/Wiki/View.aspx?title=How%20To%3a%20Identify%20a%20Disk%20Performance%20Bottleneck%20Using%20SPA&referringTitle=How%20Tos ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Processor(*)\% Processor Time" COLLECTIONVARNAME="ProcessorPercentProcessorTimeALL" EXPRESSIONPATH="\Processor(*)\% Processor Time" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Processor(*)\% Processor Time" ISTHRESHOLDSADDED="False" DATASOURCE="\Processor(*)\% Processor Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Network Utilization Analysis" ENABLED="True" CATEGORY="Network Interface" PRIMARYDATASOURCE="\Network Interface(*)\Bytes Total/sec" ID="{5a9eda78-c71b-4c94-931a-9f7af1f1b882}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Bytes Total/sec is the rate at which bytes are sent and received over each network adapter, including framing characters. Network Interface\Bytes Received/sec is a sum of Network Interface\Bytes Received/sec and Network Interface\Bytes Sent/sec. This counter indicates the rate at which bytes are sent and received over each network adapter. This counter helps you know whether the traffic at your network adapter is saturated and if you need to add another network adapter. How quickly you can identify a problem depends on the type of network you have as well as whether you share bandwidth with other applications.<BR>
<BR>
This analysis converts Bytes Total/sec to bits and compares it to the current bandwidth of the network adapter to calculate network utilization. Next, it checks for utilization above 50%.
<BR>
<B>Reference:</B><BR>
Measuring .NET Application Performance<BR>
<A HREF="http://msdn2.microsoft.com/en-us/library/ms998579.aspx">http://msdn2.microsoft.com/en-us/library/ms998579.aspx</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Network Interface(*)\Bytes Total/sec" COLLECTIONVARNAME="NetworkInterfaceBytesTotalsecALL" EXPRESSIONPATH="\Network Interface(*)\Bytes Total/sec" DATATYPE="Integer" />
    <DATASOURCE TYPE="CounterLog" NAME="\Network Interface(*)\Current Bandwidth" COLLECTIONVARNAME="NetworkInterfaceCurrentBandwidthALL" EXPRESSIONPATH="\Network Interface(*)\Current Bandwidth" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Network Interface(*)\Bytes Total/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Network Interface(*)\Bytes Total/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Processor Queue Length" ENABLED="True" CATEGORY="System" PRIMARYDATASOURCE="\System\Processor Queue Length" ID="{998676a0-583a-4594-86e0-14ad9bcd3acc}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Processor Queue Length is the number of threads in the processor queue.  Unlike the disk counters, this counter counters, this counter shows ready threads only, not threads that are running.  There is a single queue for processor time even on computers with multiple processors. Therefore, if a computer has multiple processors, you need to divide this value by the number of processors servicing the workload. A sustained processor queue of less than 10 threads per processor is normally acceptable, dependent of the workload.<BR>
<BR>
This analysis determines if the average processor queue length exceeds the number of processors. If so, then this could indicate a processor bottleneck. Use this analysis in correlation with Privileged Mode CPU Analysis and â€œExcessive Processor Use by Processâ€ analysis.<BR>
<BR>
If there are more tasks ready to run than there are processors, threads queue up. The processor queue is the collection of threads that are ready but not able to be executed by the processor because another active thread is currently executing. A sustained or recurring queue of more threads than number of processors is a good indication of a processor bottleneck.<BR>
<BR>
You can use this counter in conjunction with the Processor\% Processor Time counter to determine if your application can benefit from more CPUs. There is a single queue for processor time, even on multiprocessor computers. Therefore, in a multiprocessor computer, divide the Processor Queue Length (PQL) value by the number of processors servicing the workload.<BR>
<BR>
If the CPU is very busy (90 percent and higher utilization) and the PQL average is consistently higher than the number of processors, then you may have a processor bottleneck that could benefit from additional CPUs. Or, you could reduce the number of threads and queue more at the application level. This will cause less context switching, and less context switching is good for reducing CPU load. The common reason for a high PQL with low CPU utilization is that requests for processor time arrive randomly and threads demand irregular amounts of time from the processor. This means that the processor is not a bottleneck but that it is your threading logic that needs to be improved.<BR>
<BR>
If a user-mode processor bottleneck is suspected, then consider using a process profiler to analyze the functions causing the high CPU consumption. See â€œHow To: Identify Functions causing a High User-mode CPU Bottleneck for Server Applications in a Production Environmentâ€ article in the references section for more information.<BR>
<BR>
<B>Reference:</B><BR>
Measuring .NET Application Performance<BR>
<A HREF="http://msdn2.microsoft.com/en-us/library/ms998579.aspx">http://msdn2.microsoft.com/en-us/library/ms998579.aspx</A><BR>
<BR>
How To: Identify Functions causing a High User-mode CPU Bottleneck for Server Applications in a Production Environment http://www.codeplex.com/PerfTesting/Wiki/View.aspx?title=How%20To%3a%20Identify%20a%20Disk%20Performance%20Bottleneck%20Using%20SPA&referringTitle=How%20Tos ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\System\Processor Queue Length" COLLECTIONVARNAME="SystemProcessorQueueLength" EXPRESSIONPATH="\System\Processor Queue Length" DATATYPE="Integer" />
    <CHART CHARTTITLE="\System\Processor Queue Length" ISTHRESHOLDSADDED="False" DATASOURCE="\System\Processor Queue Length" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Privileged Mode CPU Analysis" ENABLED="True" CATEGORY="Processor" PRIMARYDATASOURCE="\Processor(*)\% Privileged Time" ID="{afe07152-24c4-4a02-9846-04537c30ff39}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This counter indicates the percentage of time a thread runs in privileged mode. When your application calls operating system functions (for example to perform file or network I/O or to allocate memory), these operating system functions are executed in privileged mode.<BR>
<BR>
High privileged mode CPU indicates that computer is spending too much time in system I/O versus real (user mode) work. % Privileged Time is the percentage of elapsed time that the process threads spent executing code in privileged mode.  When a Windows system service in called, the service will often run in privileged mode to gain access to system-private data. Such data is protected from access by threads executing in user mode. Calls to the system can be explicit or implicit, such as page faults or interrupts. Unlike some early operating systems, Windows uses process boundaries for subsystem protection in addition to the traditional protection of user and privileged modes. Some work done by Windows on behalf of the application might appear in other subsystem processes in addition to the privileged time in the process.<BR>
<BR>
This analysis checks to see if privileged mode CPU is consuming more than 30% of total CPU. If so, then the CPU consumption is likely caused by another bottleneck other than the processor such as network, memory, or disk I/O.<BR>
<BR>
<B>References:</B><BR>
Measuring .NET Application Performance<BR>
<A HREF="http://msdn2.microsoft.com/en-us/library/ms998579.aspx">http://msdn2.microsoft.com/en-us/library/ms998579.aspx</A>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Processor(*)\% Processor Time" COLLECTIONVARNAME="ProcessorPercentProcessorTimeALL" EXPRESSIONPATH="\Processor(*)\% Processor Time" DATATYPE="Integer" />
    <DATASOURCE TYPE="CounterLog" NAME="\Processor(*)\% Privileged Time" COLLECTIONVARNAME="ProcessorPercentPrivilegedTimeALL" EXPRESSIONPATH="\Processor(*)\% Privileged Time" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Processor(*)\% Privileged Time" ISTHRESHOLDSADDED="False" DATASOURCE="\Processor(*)\% Privileged Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Physical Disk Read Latency Analysis" ENABLED="True" CATEGORY="PhysicalDisk" PRIMARYDATASOURCE="\PhysicalDisk(*)\Avg. Disk sec/Read" ID="{6fe1b0c3-fb2b-49c2-8ed8-d19b58bc8d5b}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Avg. Disk sec/Read is the average time, in seconds, of a read of data to the disk. This analysis determines if any of the physical disks are responding slowly.<BR>
<BR>
If the response times are greater than <B>.020 (20 milliseconds)</B>, then the disk subsystem is keeping up with demand, but does not have much overhead left.<BR>
<BR>
If the response times are greater than <B>.050 (50 milliseconds)</B>, then noticeable slow downs and performance issues affecting users may be occurring.<BR>
<BR>
CAS Servers overall should not be disk intensive as most operations should be handled in memory. If excessive disk use is found, then we either have too much load on the server or more memory is needed to handle the overall load.<br>
<br>
<B>Reference:</B><BR>
Ruling Out Disk-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx">http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\PhysicalDisk(*)\Avg. Disk sec/Read" COLLECTIONVARNAME="PhysicalDiskAvgDisksecReadALL" EXPRESSIONPATH="\PhysicalDisk(*)\Avg. Disk sec/Read" DATATYPE="Round3" />
    <CHART CHARTTITLE="\PhysicalDisk(*)\Avg. Disk sec/Read" ISTHRESHOLDSADDED="False" DATASOURCE="\PhysicalDisk(*)\Avg. Disk sec/Read" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Physical Disk Write Latency Analysis" ENABLED="True" CATEGORY="PhysicalDisk" PRIMARYDATASOURCE="\PhysicalDisk(*)\Avg. Disk sec/Write" ID="{7c560df4-b5f3-446d-8876-740845eb5e62}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Avg. Disk sec/Write is the average time, in seconds, of a write of data to the disk. This analysis determines if any of the physical disks are responding slowly.<BR>
<BR>
If the response times are greater than <B>.020 (20 milliseconds)</B>, then the disk subsystem is keeping up with demand, but does not have much overhead left.<BR>
<BR>
If the response times are greater than <B>.050 (50 milliseconds)</B>, then noticeable slow downs and performance issues affecting users may be occurring.<BR>
<BR>
CAS Servers overall should not be disk intensive as most operations should be handled in memory. If excessive disk use is found, then we either have too much load on the server or more memory is needed to handle the overall load.<br>
<br>
<B>Reference:</B><BR>
Ruling Out Disk-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx">http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\PhysicalDisk(*)\Avg. Disk sec/Write" COLLECTIONVARNAME="PhysicalDiskAvgDisksecWriteALL" EXPRESSIONPATH="\PhysicalDisk(*)\Avg. Disk sec/Write" DATATYPE="Round3" />
    <CHART CHARTTITLE="\PhysicalDisk(*)\Avg. Disk sec/Write" ISTHRESHOLDSADDED="False" DATASOURCE="\PhysicalDisk(*)\Avg. Disk sec/Write" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Logical Disk Read Latency Analysis" ENABLED="True" CATEGORY="LogicalDisk" PRIMARYDATASOURCE="\LogicalDisk(*)\Avg. Disk sec/Read" ID="{0e2c3369-0ee2-49d5-960a-33082ab20119}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Avg. Disk sec/Read is the average time, in seconds, of a read of data to the disk. This analysis determines if any of the physical disks are responding slowly.<BR>
<BR>
If the response times are greater than <B>.020 (20 milliseconds)</B>, then the disk subsystem is keeping up with demand, but does not have much overhead left.<BR>
<BR>
If the response times are greater than <B>.050 (50 milliseconds)</B>, then noticeable slow downs and performance issues affecting users may be occurring.<BR>
<BR>
CAS Servers overall should not be disk intensive as most operations should be handled in memory. If excessive disk use is found, then we either have too much load on the server or more memory is needed to handle the overall load.<br>
<br>
<B>Reference:</B><BR>
Ruling Out Disk-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx">http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(*)\Avg. Disk sec/Read" COLLECTIONVARNAME="LogicalDiskAvgDisksecReadALL" EXPRESSIONPATH="\LogicalDisk(*)\Avg. Disk sec/Read" DATATYPE="Round3" />
    <CHART CHARTTITLE="\LogicalDisk(*)\Avg. Disk sec/Read" ISTHRESHOLDSADDED="False" DATASOURCE="\LogicalDisk(*)\Avg. Disk sec/Read" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Logical Disk Write Latency Analysis" ENABLED="True" CATEGORY="LogicalDisk" PRIMARYDATASOURCE="\LogicalDisk(*)\Avg. Disk sec/Write" ID="{90587ed7-7b6a-4a09-a056-a8818ec46b34}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Avg. Disk sec/Write is the average time, in seconds, of a write of data to the disk. This analysis determines if any of the physical disks are responding slowly.<BR>
<BR>
If the response times are greater than <B>.020 (20 milliseconds)</B>, then the disk subsystem is keeping up with demand, but does not have much overhead left.<BR>
<BR>
If the response times are greater than <B>.050 (50 milliseconds)</B>, then noticeable slow downs and performance issues affecting users may be occurring.<BR>
<BR>
CAS Servers overall should not be disk intensive as most operations should be handled in memory. If excessive disk use is found, then we either have too much load on the server or more memory is needed to handle the overall load.<br>
<br>
<B>Reference:</B><BR>
Ruling Out Disk-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx">http://technet.microsoft.com/en-us/library/5bcdd349-dcc6-43eb-9dc3-54175f7061ad.aspx</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(*)\Avg. Disk sec/Write" COLLECTIONVARNAME="LogicalDiskAvgDisksecWriteALL" EXPRESSIONPATH="\LogicalDisk(*)\Avg. Disk sec/Write" DATATYPE="Round3" />
    <CHART CHARTTITLE="\LogicalDisk(*)\Avg. Disk sec/Write" ISTHRESHOLDSADDED="False" DATASOURCE="\LogicalDisk(*)\Avg. Disk sec/Write" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Free System Page Table Entries" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Free System Page Table Entries" ID="{41413adf-e13b-4e8a-9398-a66fc52f6a4d}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Free System Page Table Entries is the number of page table entries not currently in used by the system. This analysis determines if the system is running out of free system page table entries (PTEs) by checking if there is less than 5,000 free PTEâ€™s with a Warning if there is less than 10,000 free PTEâ€™s. Lack of enough PTEs can result in system wide hangs. Also note that the /3GB switch will lower the amount of free PTEs significantly. <BR>
<BR>
The Performance Monitor â€œMemory\Free System Page Table Entriesâ€ counter is inaccurate on installations of Windows Server 2003 without Service Pack 1. For more information about this counter, see Microsoft Knowledge Base article 894067 â€œThe Performance tool does not accurately show the available Free System Page Table entries in Windows Server 2003â€ <a href="http://go.microsoft.com/fwlink/?linkid=3052&kbid=894067">http://go.microsoft.com/fwlink/?linkid=3052&amp;kbid=894067</a><BR>
<BR>
<B>Fix for Win2003 SP1 systems with /3GB and low on PTEâ€™s:</B> If the system is low on PTEâ€™s, running Windows 2003, and using /3GB switch, then consider using the /USERVA switch to give back some of the memory to the kernel. Note, this only works for Free System PTE issues.<BR>
<BR>
For more information on the USERVA switch, go to:
How to use the /userva switch with the /3GB switch to tune the User-mode space to a value between 2 GB and 3 GB
<A HREF="http://support.microsoft.com/kb/316739">http://support.microsoft.com/kb/316739</A><BR>
<BR>
<B>Reference:</B><BR>
Ruling Out Memory-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx">http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx</A><BR>
<BR>
Microsoft Knowledge Base article 894067 â€œThe Performance tool does not accurately show the available Free System Page Table entries in Windows Server 2003â€ http://go.microsoft.com/fwlink/?linkid=3052&amp;kbid=894067<BR>
<BR>
â€œHow to use the /userva switch with the /3GB switch to tune the User-mode space to a value between 2 GB and 3 GBâ€  http://support.microsoft.com/kb/316739">http://support.microsoft.com/kb/316739<BR>
<BR>
How to determine the appropriate page file size for 64-bit versions of Windows Server 2003 or Windows XP<BR>
<A HREF="http://support.microsoft.com/kb/889654">http://support.microsoft.com/kb/889654</A>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Free System Page Table Entries" COLLECTIONVARNAME="MemoryFreeSystemPageTableEntries" EXPRESSIONPATH="\Memory\Free System Page Table Entries" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Memory\Free System Page Table Entries" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Free System Page Table Entries" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Pool Non Paged Bytes" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Pool Nonpaged Bytes" ID="{a42eea56-0765-4165-b8de-810fde01d5cc}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Pool Nonpaged Bytes is the size, in bytes, of the nonpaged pool, an area of system memory (physical memory used by the operating system) for objects that cannot be written to disk, but must remain in physical memory as long as they are allocated.<BR>
<BR>
This analysis checks to see if the system is becoming close to the maximum Pool Nonpaged memory size. It does this by estimating the pool sizes taking into consideration /3GB, physical memory size, and 32-bit/64-bit, then determining if the value is higher than 60% of the estimated pool size. If the system becomes close to the maximum size, then the system could experience system wide hangs. Checks both 32-bit and 64-bit memory pools. Warning: The /3GB switch option in the boot.ini file significantly reduces the size of this memory pool.<BR>
<BR>
If the system is low on Paged Pool or non-Paged pool memory, then it is recommended to open a support case with Microsoft to address this. Alternatively, you can use a free and public tool called Poolmon.exe to see what DLLâ€™s are using kernel memory (see the article below). Most kernel memory leaks can be tracked back to a usermode process. To identify which user mode process is responsible, reboot the system (so you start off with a clean system), start a performance monitor log intending to run for a week or more capturing the Memory and Process objects, then analyze the perfmon log looking for memory leaks and/or handle leaks in one or more of the processes. In any case, migrating to a 64-bit version of Windows should alleviate this issue.
<BR>
<B>References:</B><BR>
How to Use Memory Pool Monitor (Poolmon.exe) to Troubleshoot Kernel Mode Memory Leaks<BR>
<A HREF="http://support.microsoft.com/kb/177415">http://support.microsoft.com/kb/177415</A><BR>
<BR>
Ruling Out Memory-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx">http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx</A><BR>
<BR>
How to determine the appropriate page file size for 64-bit versions of Windows Server 2003 or Windows XP<BR>
<A HREF="http://support.microsoft.com/kb/889654">http://support.microsoft.com/kb/889654</A>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Pool Nonpaged Bytes" COLLECTIONVARNAME="MemoryPoolNonpagedBytes" EXPRESSIONPATH="\Memory\Pool Nonpaged Bytes" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Memory\Pool Nonpaged Bytes" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Pool Nonpaged Bytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Pool Paged Bytes" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Pool Paged Bytes" ID="{a99857d4-e566-4d33-a879-4968c7a0e863}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis checks to see if the system is becoming close to the maximum Pool paged memory size. Pool Paged Bytes is the size, in bytes, of the paged pool, an area of system memory (physical memory used by the operating system) for objects that can be written to disk when they are not being used.<BR>
<BR>
This analysis checks to see if the system is becoming close to the maximum Pool Paged memory size. It does this by estimating the pool sizes taking into consideration /3GB, physical memory size, and 32-bit/64-bit, then determining if the value is higher than 60% of the estimated pool size. If the system becomes close to the maximum size, then the system could experience system wide hangs. Checks both 32-bit and 64-bit memory pools. Warning: The /3GB switch option in the boot.ini file significantly reduces the size of this memory pool.<BR>
<BR>
If the system is low on Paged Pool or non-Paged pool memory, then it is recommended to open a support case with Microsoft to address this. Alternatively, you can use a free and public tool called Poolmon.exe to see what DLLâ€™s are using kernel memory (see the article below). Most kernel memory leaks can be tracked back to a usermode process. To identify which user mode process is responsible, reboot the system (so you start off with a clean system), start a performance monitor log intending to run for a week or more capturing the Memory and Process objects, then analyze the perfmon log looking for memory leaks and/or handle leaks in one or more of the processes. In any case, migrating to a 64-bit version of Windows should alleviate this issue.<BR>
<BR>
<B>Reference:</B><BR>
How to Use Memory Pool Monitor (Poolmon.exe) to Troubleshoot Kernel Mode Memory Leaks<BR>
<A HREF="http://support.microsoft.com/kb/177415">http://support.microsoft.com/kb/177415</A><BR>
<BR>
Ruling Out Memory-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx">http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx</A><BR>
<BR>
How to determine the appropriate page file size for 64-bit versions of Windows Server 2003 or Windows XP<BR>
<A HREF="http://support.microsoft.com/kb/889654">http://support.microsoft.com/kb/889654</A>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Pool Paged Bytes" COLLECTIONVARNAME="MemoryPoolPagedBytes" EXPRESSIONPATH="\Memory\Pool Paged Bytes" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Memory\Pool Paged Bytes" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Pool Paged Bytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Available Memory" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Available MBytes" ID="{9f2c95f4-b33d-45f2-aee7-11d5a8f5db01}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Available MBytes is the amount of physical memory available to processes running on the computer, in Megabytes, rather than bytes as reported in Memory\Available Bytes. The Virtual Memory Manager continually adjusts the space used in physical memory and on disk to maintain a minimum number of available bytes for the operating system and processes. When available bytes are plentiful, the Virtual Memory Manager lets the working sets of processes grow, or keeps them stable by removing an old page for each new page added. When available bytes are few, the Virtual Memory Manager must trim the working sets of processes to maintain the minimum required.

This analysis checks to see if the total available memory is low â€“ Warning at 10% available and Critical at 5% available. A Warning is also alerted when a decreasing trend of 10MBâ€™s per hour is detecting indicating a potential upcoming memory condition. Low physical memory can cause increased privileged mode CPU and system delays. <BR>
<BR>
<B>Reference:</B><BR>
Ruling Out Memory-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx">http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx</A><BR>
<BR>
Detecting Memory Bottlenecks <br>
http://www.microsoft.com/resources/documentation/windowsnt/4/workstation/reskit/en-us/04memory.mspx?mfr=true ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Available MBytes" COLLECTIONVARNAME="MemoryAvailableMBytes" EXPRESSIONPATH="\Memory\Available MBytes" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Memory\Available MBytes" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Available MBytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Pages/sec" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Pages/sec" ID="{4c9f407f-8cad-4d17-9f29-253abeffba16}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis checks to see if the Pages/sec is high. If it is high, then the system is likely running out of memory by trying to page the memory to the disk. Pages/sec is the rate at which pages are read from or written to disk to resolve hard page faults. This counter is a primary indicator of the kinds of faults that cause system-wide delays.  It is the sum of Memory\Pages Input/sec and Memory\Pages Output/sec. It is counted in numbers of pages, so it can be compared to other counts of pages, such as Memory\Page Faults/sec, without conversion. It includes pages retrieved to satisfy faults in the file system cache (usually requested by applications) non-cached mapped memory files.<BR>
<BR>
This counter should always be below 1000, therefore this analysis checks for values above 1000. Use this analysis in correlation with Available Memory Analysis and Memory Leak Analysis. All are throwing alerts at the same time, then this may indicate the system is running out of memory and the suspected processes involved and follow analysis steps mentioned in the Memory Leak analysis.<BR>
<BR>
<b>Role Specific</b>
<B>Reference:</B><BR>
Ruling Out Memory-Bound Problems<BR>
<A HREF="http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx">http://technet.microsoft.com/en-us/library/7a44b064-8872-4edf-aac7-36b2a17f662a.aspx</A><BR>
<BR>
      ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Pages/sec" COLLECTIONVARNAME="MemoryPagessec" EXPRESSIONPATH="\Memory\Pages/sec" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Memory\Pages/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Pages/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Network Output Queue Length Analysis" ENABLED="True" CATEGORY="Network Interface" PRIMARYDATASOURCE="\Network Interface(*)\Output Queue Length" ID="{7d849bf7-b755-4283-a369-674d220b41f5}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis checks to see how many threads are waiting on the network adapter. If there are a lot of threads waiting on the network adapter, then the system is most likely saturating the network I/O most likely due to network latency or network bandwidth.<BR>
<BR>
Output Queue Length is the length of the output packet queue (in packets). If this is longer than two, there are delays and the bottleneck should be found and eliminated, if possible. Since the requests are queued by the Network Driver Interface Specification (NDIS) in this implementation, this will always be 0.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Network Interface(*)\Output Queue Length" COLLECTIONVARNAME="NetworkInterfaceOutputQueueLengthALL" EXPRESSIONPATH="\Network Interface(*)\Output Queue Length" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Network Interface(*)\Output Queue Length" ISTHRESHOLDSADDED="False" DATASOURCE="\Network Interface(*)\Output Queue Length" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="High Context Switching" ENABLED="True" CATEGORY="System" PRIMARYDATASOURCE="\System\Context Switches/sec" ID="{f37e828e-b486-43d6-93ce-01c5b34368f0}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[High context switching is only a problem if privileged mode CPU and overall CPU is high as well. This analysis checks for high CPU, high privileged mode CPU, and high system context switches per sec.<BR>
<BR>
Threshold: As a general rule, context switching rates of less than 5,000 per second per processor are not worth worrying about. If context switching rates exceed 15,000 per second per processor, then there is a constraint.<BR>
<BR>
Significance: Context switching happens when a higher priority thread preempts a lower priority thread that is currently running or when a high priority thread blocks. High levels of context switching can occur when many threads share the same priority level. This often indicates that there are too many threads competing for the processors on the system. If you do not see much processor utilization and you see very low levels of context switching, it could indicate that threads are blocked.<BR>
<BR>
<B>Reference:</B><BR>
Measuring .NET Application Performance<BR>
<A HREF="http://msdn2.microsoft.com/en-us/library/ms998579.aspx">http://msdn2.microsoft.com/en-us/library/ms998579.aspx</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Processor(_Total)\% Processor Time" COLLECTIONVARNAME="ProcessorPercentProcessorTime_Total" EXPRESSIONPATH="\Processor(_Total)\% Processor Time" DATATYPE="Integer" />
    <DATASOURCE TYPE="CounterLog" NAME="\Processor(_Total)\% Privileged Time" COLLECTIONVARNAME="ProcessorPercentPrivilegedTime_Total" EXPRESSIONPATH="\Processor(_Total)\% Privileged Time" DATATYPE="Integer" />
    <DATASOURCE TYPE="CounterLog" NAME="\System\Context Switches/sec" COLLECTIONVARNAME="SystemContextSwitchessec" EXPRESSIONPATH="\System\Context Switches/sec" DATATYPE="Integer" />
    <CHART CHARTTITLE="\System\Context Switches/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\System\Context Switches/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Leak Detection" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\Private Bytes" ID="{2d1706b1-c82c-4a27-8cda-f442f8d04700}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis determines if any of the processes are consuming a large size of the system's memory and if the process is increasing in memory consumption over time. A process consuming large portions of memory is okay as long as the process returns the memory back to the system. Look for increasing trends in the chart. An increasing trend over a long period of time could indicate a memory leak. Private Bytes is the current size, in bytes, of memory that this process has allocated that cannot be shared with other processes. This analysis checks for a 10MBâ€™s per hour and 5MBâ€™s per hour increasing trends. Use this analysis in correlation with the Available Memory analysis.<BR>
<BR>
Also, keep in mind that newly started processes will initially appear as a memory leak when it is simply normal start up behavior. A memory leak is when a process continues to consume memory and not releasing memory over a long period of time.<BR>
<BR>
Use this analysis in correlation with the Available Memory analysis. If you suspect a memory leak condition, then install and use the Debug Diag tool. For more information on the Debug Diag Tool, see the references section.<BR>
<BR>
<B>References:</B><BR>
<BR>
<BR>
Debug Diagnostic Tool v1.1 <a 
href="http://www.microsoft.com/downloads/details.aspx?FamilyID=28bd5941-c458-46f1-b24d-f60151d875a3&displaylang=
en">http://www.microsoft.com/downloads/details.aspx?FamilyID=28bd5941-c458-46f1-b24d-f60151d875a3&displaylang=en
</a><br>
<BR>
<B>Known Issues:</B><BR>
<BR>
- If Process(MonitoringHost.exe)\Private Bytes is generating a sawtooth looking pattern, then this is a known 
issue for SCOM 2007 as listed in <a href="http://support.microsoft.com/kb/950853">950853</a>. You will also see 
a corresponding 6026 event in the application log stating that this process has exceeded some threshold and is 
being restarted. <BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\Private Bytes" COLLECTIONVARNAME="ProcessPrivateBytesALL" EXPRESSIONPATH="\Process(*)\Private Bytes" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Process(*)\Private Bytes" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\Private Bytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Handle Leak Detection" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\Handle Count" ID="{4c410905-2a0a-41ac-810a-f5f12666fb5e}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis checks all of the processes to determine how many handles each has open and determines if a handle leaks is suspected. A process with a large number of handles and/or an aggresive upward trend could indicate a handle leak which typically results in a memory leak. The total number of handles currently open by this process. This number is equal to the sum of the handles currently open by each thread in this process.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\Handle Count" COLLECTIONVARNAME="ProcessHandleCountALL" EXPRESSIONPATH="\Process(*)\Handle Count" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Process(*)\Handle Count" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\Handle Count" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Process Thread Count" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\Thread Count" ID="{e78e8563-b457-417f-a775-5c5f4694a192}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The number of threads currently active in this process. An instruction is the basic unit of execution in a processor, and a thread is the object that executes instructions. Every running process has at least one thread.<BR>
<BR>
This analysis checks all of the processes to determine if a process has more than 500 threads and if it is on an increasing trend of 50 threads per hour. A process with a large number of threads and/or an aggressive upward trend could indicate a thread leak which typically results in either a memory leak or high context switching. High context switching will result in high privileged mode CPU. ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\Thread Count" COLLECTIONVARNAME="ProcessThreadCountALL" EXPRESSIONPATH="\Process(*)\Thread Count" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Process(*)\Thread Count" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\Thread Count" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Excessive Processor Use by Processes" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\% Processor Time" ID="{f01e4429-b3fd-49ba-92fb-b5b31b9a68a3}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis checks all of the processes to determine if any of the processes are consuming a large amount of CPU.<BR>
<BR>
If a user-mode processor bottleneck is suspected, then consider using a process profiler to analyze the functions causing the high CPU consumption. See â€œHow To: Identify Functions causing a High User-mode CPU Bottleneck for Server Applications in a Production Environmentâ€ article in the references section for more information.<BR>
<BR>
<b>Role Specific</b><br>
<br>
- Process(MSExchangeMailboxAssistants*)\%Processor Time should be less than 5% of overll CPU<br>
<br>
- Process(msftefd*)\%Processor Time should be less than 10% of what the store process is consuming. <b>Note:</b> If indexing is running and overall CPU is greater than 80%, then msfte should backoff it's CPU usage if that threshold is hit.<br>
<br>
<B>References:</B><BR>
Measuring .NET Application Performance<BR>
http://msdn2.microsoft.com/en-us/library/ms998579.aspx<BR>
<BR>
How To: Identify Functions causing a High User-mode CPU Bottleneck for Server Applications in a Production Environment http://www.codeplex.com/PerfTesting/Wiki/View.aspx?title=How%20To%3a%20Identify%20a%20Disk%20Performance%20Bottleneck%20Using%20SPA&referringTitle=How%20Tos ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\% Processor Time" COLLECTIONVARNAME="ProcessPercentProcessorTimeALL" EXPRESSIONPATH="\Process(*)\% Processor Time" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Process(*)\% Processor Time" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\% Processor Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="High Virtual Memory Usage" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\Virtual Bytes" ID="{c05a6ee5-2c15-42ca-aaca-90cc97570484}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[This analysis determines if any of the processes are consuming a large of virtual memory. 32-bit processes by default are only allowed to access up to 2GB's of user mode memory. If the process becomes close to this maximum, then it could starve for memory. If a process is becoming close to it's maximum, then consider moving the process to a 64-bit system. The /3GB switch could be used to give the user mode process a total of 3GB's of addressable memory, but this takes away 1GB of memory from the kernel which could have worse affects on the entire system such as with Pool Paged Memory and Pool Non-Paged Memory.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\Virtual Bytes" COLLECTIONVARNAME="ProcessVirtualBytesALL" EXPRESSIONPATH="\Process(*)\Virtual Bytes" DATATYPE="Integer" />
    <CHART CHARTTITLE="\Process(*)\Virtual Bytes" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\Virtual Bytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Disk Free Space for a Kernel Dump" ENABLED="True" CATEGORY="LogicalDisk" PRIMARYDATASOURCE="\LogicalDisk(C:)\Free Megabytes" ID="{bf299fa9-04d0-4031-af63-e8ed81716b98}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The default setting of kernel dumps (blue screens) is to purge all of the physical memory to the C: drive under the windows directory as a memory.dmp file. This analysis checks to make sure there is enough free disk space for the operating system to dump all memory to disk.      ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(C:)\Free Megabytes" COLLECTIONVARNAME="LogicalDiskFreeMegabytesC" EXPRESSIONPATH="\LogicalDisk(C:)\Free Megabytes" DATATYPE="Integer" />
    <CHART CHARTTITLE="\LogicalDisk(C:)\Free Megabytes" ISTHRESHOLDSADDED="False" DATASOURCE="\LogicalDisk(C:)\Free Megabytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Interrupt Time" ENABLED="True" CATEGORY="Processor" PRIMARYDATASOURCE="\Processor(*)\% Interrupt Time" ID="{fabf61b1-15dd-44d5-a0b5-39b64e92417f}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[% Interrupt Time is the time the processor spends receiving and servicing hardware interrupts during sample intervals. This value is an indirect indicator of the activity of devices that generate interrupts, such as the system clock, the mouse, disk drivers, data communication lines, network interface cards and other peripheral devices. These devices normally interrupt the processor when they have completed a task or require attention. Normal thread execution is suspended during interrupts. Most system clocks interrupt the processor every 10 milliseconds, creating a background of interrupt activity. A dramatic increase in this counter indicates potential hardware problems.<BR>
<BR>
This analysis checks for % Interrupt Time greater than 30%. If this occurs, then consider updating devices drivers for hardware that correlates to this alert.<BR>
<BR>
<B>References:</B><BR>
Measuring .NET Application Performance<BR>
<A HREF="http://msdn2.microsoft.com/en-us/library/ms998579.aspx">http://msdn2.microsoft.com/en-us/library/ms998579.aspx</A>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Processor(*)\% Interrupt Time" COLLECTIONVARNAME="ProcessorPercentInterruptTimeALL" EXPRESSIONPATH="\Processor(*)\% Interrupt Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\Processor(*)\% Interrupt Time" ISTHRESHOLDSADDED="False" DATASOURCE="\Processor(*)\% Interrupt Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Process Working Set" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\Working Set" ID="{319c49ee-7294-48db-b425-cf460d9657cd}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Working Set is the current size, in bytes, of the Working Set of this process. The Working Set is the set of memory pages touched recently by the threads in the process. If free memory in the computer is above a threshold, pages are left in the Working Set of a process even if they are not in use.  When free memory falls below a threshold, pages are trimmed from Working Sets. If they are needed they will then be soft-faulted back into the Working Set before leaving main memory.<BR>
This analysis checks for an decreasing trend of 100MBâ€™s or more in each of the processes. Use in correlation with Available Memory Analysis.<BR>
<BR>
<b>Known Issues</b><br>
<br>
- Outdated HP ILO driver causing kernel memory allocation problems. See <A HREF="http://technet.microsoft.com/en-us/library/aa998677.aspx">http://technet.microsoft.com/en-us/library/aa998677.aspx</a><br>
<br>
- Outdated Broadcom network card drivers with the Scalable Networking Pack chimney features enabled causing process working sets to get trimmed. Updating to the latest network card driver to VBD version 3.7x or later will help with this situation. See <A HREF="http://www.broadcom.com/support/ethernet_nic/netxtremeii.php">http://www.broadcom.com/support/ethernet_nic/netxtremeii.php</a> for more information on the update drivers. Certain OEM's have updated their drivers, so check with your server manufacturer before applying any update directly from the Broadcom site.<br>
<br>
<b>Hotfix:</b><br>
<br>
Applying <A HREF="http://support.microsoft.com/kb/938486">http://support.microsoft.com/kb/938486</a> will help reduce the amount that the working sets are trimmed preventing server performance issues due to excessive paging. <b>Note:</b> Any driver that calls the function MMAllocateContiguousMemory in large blocks may cause working sets to get trimmed. Exchange 2007 caches most data in memory and any trimming of any working sets will be detremental to overall performance.<br>
<br>
<B>References:</B><BR>
<BR>
Detecting Memory Bottlenecks <A HREF="http://www.microsoft.com/resources/documentation/windowsnt/4/workstation/reskit/en-us/04memory.mspx?mfr=true">http://www.microsoft.com/resources/documentation/windowsnt/4/workstation/reskit/en-us/04memory.mspx?mfr=true</a> ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\Working Set" COLLECTIONVARNAME="ProcessWorkingSetALL" EXPRESSIONPATH="\Process(*)\Working Set" DATATYPE="integer" />
    <CHART CHARTTITLE="\Process(*)\Working Set" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\Working Set" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory System Cache Resident Bytes" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\System Cache Resident Bytes" ID="{f85c5626-16af-4c49-85fa-22ec1a488d87}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[System Cache Resident Bytes is the size, in bytes, of the pageable operating system code in the file system cache. This value includes only current physical pages and does not include any virtual memory pages not currently resident. It does equal the System Cache value shown in Task Manager. As a result, this value may be smaller than the actual amount of virtual memory in use by the file system cache. This value is a component of Memory\\System Code Resident Bytes which represents all pageable operating system code that is currently in physical memory. This counter displays the last observed value only; it is not an average.<BR>
<BR>
This analysis checks for an increasing trend of 10MBâ€™s per hour. Under load, a server might use the System Cache in order to cache I/O activity such as disk. Use in correlation with Process IO Data Operations/sec and Process IO Other Operations/sec Analyses.<BR>
<BR>
<B>References:</B><BR>
File Cache Performance and Tuning http://technet.microsoft.com/en-us/library/bb742613.aspx
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\System Cache Resident Bytes" COLLECTIONVARNAME="MemorySystemCacheResidentBytes" EXPRESSIONPATH="\Memory\System Cache Resident Bytes" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\System Cache Resident Bytes" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\System Cache Resident Bytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Process IO Data Operations/sec" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\IO Data Operations/sec" ID="{255383ea-7547-4a30-bea7-02bad4e354c3}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate at which the process is issuing read and write I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\IO Data Operations/sec" COLLECTIONVARNAME="ProcessIODataOperationssecALL" EXPRESSIONPATH="\Process(*)\IO Data Operations/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Process(*)\IO Data Operations/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\IO Data Operations/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Process IO Other Operations/sec" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\IO Other Operations/sec" ID="{3694b426-6914-4a63-b023-9cf4db65672c}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate at which the process is issuing I/O operations that are neither read nor write operations (for example, a control function). This counter counts all I/O activity generated by the process to include file, network and device I/Os.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\IO Other Operations/sec" COLLECTIONVARNAME="ProcessIOOtherOperationssecALL" EXPRESSIONPATH="\Process(*)\IO Other Operations/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Process(*)\IO Other Operations/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\IO Other Operations/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="LogicalDisk Disk Transfers/sec" ENABLED="True" CATEGORY="LogicalDisk" PRIMARYDATASOURCE="\LogicalDisk(*)\Disk Transfers/sec" ID="{a5cd92b3-9b18-4aed-8345-7e756fc69568}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Disk Transfers/sec is the rate of read and write operations on the disk.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(*)\Disk Transfers/sec" COLLECTIONVARNAME="LogicalDiskDiskTransferssecALL" EXPRESSIONPATH="\LogicalDisk(*)\Disk Transfers/sec" DATATYPE="integer" />
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(*)\Avg. Disk sec/Read" COLLECTIONVARNAME="LogicalDiskAvgDisksecReadALL" EXPRESSIONPATH="\LogicalDisk(*)\Avg. Disk sec/Read" DATATYPE="round3" />
    <DATASOURCE TYPE="CounterLog" NAME="\LogicalDisk(*)\Avg. Disk sec/Write" COLLECTIONVARNAME="LogicalDiskAvgDisksecWriteALL" EXPRESSIONPATH="\LogicalDisk(*)\Avg. Disk sec/Write" DATATYPE="round3" />
    <CHART CHARTTITLE="\LogicalDisk(*)\Disk Transfers/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\LogicalDisk(*)\Disk Transfers/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Pages Input/sec" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Pages Input/sec" ID="{2e1a6444-63cd-4a77-9970-2e9b55fc11f9}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Pages Input/sec is the rate at which pages are read from disk to resolve hard page faults. Hard page faults occur when a process refers to a page in virtual memory that is not in its working set or elsewhere in physical memory, and must be retrieved from disk. When a page is faulted, the system tries to read multiple contiguous pages into memory to maximize the benefit of the read operation. Compare the value of Memory\\Pages Input/sec to the value of  Memory\\Page Reads/sec to determine the average number of pages read into memory during each read operation.
<BR><BR>
<B>Reference:</B><BR>
How to determine the appropriate page file size for 64-bit versions of Windows Server 2003 or Windows XP<BR>
<A HREF="http://support.microsoft.com/kb/889654">http://support.microsoft.com/kb/889654</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Pages Input/sec" COLLECTIONVARNAME="MemoryPagesInputsec" EXPRESSIONPATH="\Memory\Pages Input/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\Pages Input/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Pages Input/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Paging File % Usage" ENABLED="True" CATEGORY="Paging File" PRIMARYDATASOURCE="\Paging File(*)\% Usage" ID="{741b130b-ea37-41be-a640-89e6fb76dccc}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The amount of the Page File instance in use in percent.  See also Process\\Page File Bytes.<BR>
<BR>
This analysis checks if the percentage of usage is greater than 70%.<BR>
<BR>
<B>Reference:</B><BR>
How to determine the appropriate page file size for 64-bit versions of Windows Server 2003 or Windows XP<BR>
<A HREF="http://support.microsoft.com/kb/889654">http://support.microsoft.com/kb/889654</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Paging File(*)\% Usage" COLLECTIONVARNAME="PagingFilePercentUsageALL" EXPRESSIONPATH="\Paging File(*)\% Usage" DATATYPE="integer" />
    <CHART CHARTTITLE="\Paging File(*)\% Usage" ISTHRESHOLDSADDED="False" DATASOURCE="\Paging File(*)\% Usage" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Paging File % Usage Peak" ENABLED="True" CATEGORY="Paging File" PRIMARYDATASOURCE="\Paging File(*)\% Usage Peak" ID="{c40708f5-333e-4bc5-a49c-b5b59527e8ec}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The peak usage of the Page File instance in percent.  See also Process\\Page File Bytes Peak.<BR>
<BR>
<B>Reference:</B><BR>
How to determine the appropriate page file size for 64-bit versions of Windows Server 2003 or Windows XP<BR>
<A HREF="http://support.microsoft.com/kb/889654">http://support.microsoft.com/kb/889654</A><BR>
<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Paging File(*)\% Usage Peak" COLLECTIONVARNAME="PagingFilePercentUsagePeakALL" EXPRESSIONPATH="\Paging File(*)\% Usage Peak" DATATYPE="integer" />
    <CHART CHARTTITLE="\Paging File(*)\% Usage Peak" ISTHRESHOLDSADDED="False" DATASOURCE="\Paging File(*)\% Usage Peak" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME=".NET CLR Exceptions / Second" ENABLED="True" CATEGORY=".NET CLR Exceptions" PRIMARYDATASOURCE="\.NET CLR Exceptions(*)\# of Exceps Thrown / sec" ID="{e68348ce-6efc-450d-9e45-56e5fee00fe6}" FROMALLCOUNTERSTATS="False">
    <DATASOURCE TYPE="CounterLog" NAME="\.NET CLR Exceptions(*)\# of Exceps Thrown / sec" COLLECTIONVARNAME="NETCLRExceptions#ofExcepsThrownsecALL" EXPRESSIONPATH="\.NET CLR Exceptions(*)\# of Exceps Thrown / sec" DATATYPE="Integer" />
    <DATASOURCE TYPE="CounterLog" NAME="\Web Service(_Total)\Connection Attempts/sec" COLLECTIONVARNAME="WebServiceConnectionAttemptssec_Total" EXPRESSIONPATH="\Web Service(_Total)\Connection Attempts/sec" DATATYPE="Integer" />
    <CHART CHARTTITLE="\.NET CLR Exceptions(*)\# of Exceps Thrown / sec" ISTHRESHOLDSADDED="False" DATASOURCE="\.NET CLR Exceptions(*)\# of Exceps Thrown / sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="ASP.NET Request Execution Time" ENABLED="True" CATEGORY="ASP.NET Applications" PRIMARYDATASOURCE="\ASP.NET Applications\Request Execution Time" ID="{25f3effa-8557-445a-9547-bc65e748247c}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[
      The number of milliseconds taken to execute the last request. In version 1.0 of the Framework, the execution time begins when the worker process receives the request, and stops when the ASP.NET ISAPI sends HSE_REQ_DONE_WITH_SESSION to IIS. For IIS version 5, this includes the time taken to write the response to the client, but for IIS version 6, the response buffers are sent asynchronously, and so the time taken to write the response to the client is not included. Thus on IIS version 5, a client with a slow network connection will increase the value of this counter considerably. In version 1.1 of the Framework, execution time begins when the HttpContext for the request is created, and stops before the response is sent to IIS. Assuming that user code does not call HttpResponse.Flush, this implies that execution time stops before sending any bytes to IIS, or to the client for that matter. ASP.NET\Request Execution Time is an instance counter, and very volatile. On the other hand, time to last byte (TTLB) can be easily averaged and used to calculate a better estimate of performance over a period of time. TTLB can be calculated through a simple HTTP client written in managed code, or you can use one of the many HTTP clients available that calculate TTLB, such as Application Center Test (ACT). Note that if <compilation debug=/> is set to TRUE, then batch compilation will be disabled and the <httpRuntime executionTimeout=/> configuration setting as well as calls to Server.ScriptTimeout will be ignored. This can cause problems if the <processModel responseDeadlockInterval=/> setting is not set to Infinite, since requests for debug pages can theoretically run forever. Threshold: N.A. The value of this counter should be stable. Experience will help set a threshold for a particular site. When the process model is enabled, the request execution time includes the time required to write the response to the client, and therefore depends upon the bandwidth of the client's connection.
      <BR>
      Reference:<BR>
      <A HREF="http://msdn2.microsoft.com/en-us/library/ms972959.aspx">ASP.NET Performance</A>      
      ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\ASP.NET Applications\Request Execution Time" COLLECTIONVARNAME="ASPNETApplicationsRequestExecutionTime" EXPRESSIONPATH="\ASP.NET Applications\Request Execution Time" DATATYPE="Integer" />
    <CHART CHARTTITLE="\ASP.NET Applications\Request Execution Time" ISTHRESHOLDSADDED="False" DATASOURCE="\ASP.NET Applications(*)\Request Execution Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="ASP.NET Requests Queued" ENABLED="True" CATEGORY="ASP.NET" PRIMARYDATASOURCE="\ASP.NET\Requests Queued" ID="{58644a34-fe93-45f9-b9fe-b19ae5fd7f50}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[
      The number of requests currently queued. When running on IIS 5.0, there is a queue between inetinfo and aspnet_wp, and there is one queue for each virtual directory. When running on IIS 6.0, there is a queue where requests are posted to the managed ThreadPool from native code, and a queue for each virtual directory. This counter includes requests in all queues. The queue between inetinfo and aspnet_wp is a named pipe through which the request is sent from one process to the other. The number of requests in this queue increases if there is a shortage of available I/O threads in the aspnet_wp process. On IIS 6.0 it increases when there are incoming requests and a shortage of worker threads. Note that requests are rejected when the Requests Current counter exceeds the <processModel requestQueueLimit=/>. Many people think this occurs when the Requests Queued counter exceeds requestQueueLimit, but this is not the case. When this limit is exceeded, requests will be rejected with a 503 status code and the message "Server is too busy." If a request is rejected for this reason, it will never reach managed code, and error handlers will not be notified. Normally this is only an issue when the server is under a very heavy load, although a "burst" load every hour might also cause this. For the unusual burst load scenario, you might be interested in the hotfix described in Knowledge Base Article 810259, which will allow you to increase the minimum number of I/O threads from the default of 1 per CPU. Each virtual directory has a queue that it uses to maintain the availability of worker and I/O threads. The number of requests in this queue increases if the number of available worker threads or available I/O threads falls below the limit specified by <httpRuntime minFreeThreads=/>. When the limit specified by <httpRuntime appRequestQueueLimit=/> is exceeded, the request is rejected with a 503 status code and the client receives an HttpException with the message "Server too busy." By itself, this counter is not a clear indicator of performance issues, nor can it be used to determine when requests will be rejected. In Knowledge Base Article 329959, two new performance counters were introduced to address this problem: Requests Current and Requests In Application Queue. Please see the descriptions for these two counters, as well as for Requests Rejected.
      <BR>
      Reference:<BR><BR>
      <A HREF="http://msdn2.microsoft.com/en-us/library/ms972959.aspx">ASP.NET Performance</A>
      ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\ASP.NET\Requests Queued" COLLECTIONVARNAME="ASPNETRequestsQueued" EXPRESSIONPATH="\ASP.NET\Requests Queued" DATATYPE="Integer" />
    <CHART CHARTTITLE="\ASP.NET\Requests Queued" ISTHRESHOLDSADDED="False" DATASOURCE="\ASP.NET(*)\Requests Queued" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Leak Detection in .NET " ENABLED="True" CATEGORY=".NET CLR Memory" PRIMARYDATASOURCE="\.NET CLR Memory(*)\# Bytes in all Heaps" ID="{4c9aaa4d-5c15-4e2a-8cca-28aa324a755c}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[
      The number of bytes committed by managed objects. This is the sum of the large object heap and the generation 0, 1, and 2 heaps. These regions of memory are of type MEM_COMMIT (see Platform SDK documentation for VirtualAlloc). The value of this counter will always be less than the value of Process\Private Bytes, which counts all MEM_COMMIT regions for the process. Private Bytes minus # Bytes in all Heaps is the number of bytes committed by unmanaged objects. The first step in the investigation of excessive memory usage is to determine whether it is being used by managed or unmanaged objects. To investigate excessive managed memory usage, I recommend WINDBG.EXE and SOS.DLL, which you can read about in Production Debugging for .NET Framework Applications. SOS.DLL has a "!dumpheap â€“stat" command that lists the count, size, and type of objects in the managed heap. You can use "!dumpheap â€“mt" to obtain the address of an object, and "!gcroot" to see its roots. The command "!eeheap" presents memory usage statistics for the managed heaps. 
      <P>
      Another useful tool for diagnosing memory usage is the CLR Profiler, discussed in more detail below. 
      <P>
      Excessive managed memory usage is commonly caused by: 
      <OL type="a">
        <LI>Reading large data sets into memory.</LI>
        <LI>Creating excessive cache entries.</LI>
        <LI>Uploading or downloading large files.</LI>
        <LI>Excessive use of regular expressions or strings while parsing files. </LI>
        <LI>Excessive ViewState.</LI>
        <LI>Too much data in session state or too many sessions.</LI>
      </OL>
      <BR><BR>
      Reference:<BR>
      <A HREF="http://msdn2.microsoft.com/en-us/library/ms972959.aspx">ASP.NET Performance</A>
      ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\.NET CLR Memory(*)\# Bytes in all Heaps" COLLECTIONVARNAME="NETCLRMemory#BytesinallHeapsALL" EXPRESSIONPATH="\.NET CLR Memory(*)\# Bytes in all Heaps" DATATYPE="Integer" />
    <CHART CHARTTITLE="\.NET CLR Memory(*)\# Bytes in all Heaps" ISTHRESHOLDSADDED="False" DATASOURCE="\.NET CLR Memory(*)\# Bytes in all Heaps" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="ASP.NET Application Restarts" ENABLED="True" CATEGORY="ASP.NET" PRIMARYDATASOURCE="\ASP.NET\Application Restarts" ID="{31cdb74d-366a-404c-8fd0-c51042bc0fa3}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[
      The number of application restarts. Recreating the application domain and recompiling pages takes time, therefore unforeseen application restarts should be investigated. The application domain is unloaded when one of the following occurs:
      <ul type="disc"> <li>Modification of <b>machine.config</b>, <b>web.config</b>, or <b>global.asax</b>.</li> <li>Modification of the application's bin directory or its contents.</li> <li>When the number of compilations (ASPX, ASCX, or ASAX) exceeds the limit specified by &lt;compilation numRecompilesBeforeAppRestart=/&gt;.</li> <li>Modification of the physical path of a virtual directory.</li> <li>Modification of the code-access security policy. </li> <li>The Web service is restarted.</li> </ul> <p>For Web farms in production, it is recommended that a server be removed from rotation prior to updating content for best performance and reliability. For a single Web server in production, content can be updated while the server is under load. The hotfix described in <a href="http://support.microsoft.com/default.aspx?scid=kb;[ln];810281">Knowledge Base Article 810281</a> is of interest to anyone experiencing errors after an application restarts, such as sharing violations with an error similar to "Cannot access file &lt;FileName&gt; because it is being used by another process."

</p><p>An issue involving anti-virus software and applications restarts is fixed in Knowledge Base Article 820746: <a href="http://support.microsoft.com/?id=820746">FIX: Some Antivirus Programs May Cause Web Applications to Restart Unexpectedly</a> for v1.0, and in <a href="http://support.microsoft.com/?id=821438">Knowledge Base Article 821438</a> for v1.1.

</p><p><b>Threshold: 0</b>. In a perfect world, the application domain will survive for the life of the process. Excessive values should be investigated, and a new threshold should be set as necessary.
      <BR><BR>
      Reference:<BR>
      <A HREF="http://msdn2.microsoft.com/en-us/library/ms972959.aspx">ASP.NET Performance</A>      
      ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\ASP.NET\Application Restarts" COLLECTIONVARNAME="ASPNETApplicationRestarts" EXPRESSIONPATH="\ASP.NET\Application Restarts" DATATYPE="Integer" />
    <CHART CHARTTITLE="\ASP.NET(*)\Application Restarts" ISTHRESHOLDSADDED="False" DATASOURCE="\ASP.NET\Application Restarts" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Page Reads/sec" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Page Reads/sec" ID="{84826e00-751f-447c-ba1c-58db72f2af65}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Page Reads/sec is the rate at which the disk was read to resolve hard page faults. It shows the number of reads operations, without regard to the number of pages retrieved in each operation. Hard page faults occur when a process references a page in virtual memory that is not in working set or elsewhere in physical memory, and must be retrieved from disk. This counter is a primary indicator of the kinds of faults that cause system-wide delays. It includes read operations to satisfy faults in the file system cache (usually requested by applications) and in non-cached mapped memory files. Compare the value of Memory\\Pages Reads/sec to the value of Memory\\Pages Input/sec to determine the average number of pages read during each operation.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Page Reads/sec" COLLECTIONVARNAME="MemoryPageReadssec" EXPRESSIONPATH="\Memory\Page Reads/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\Page Reads/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Page Reads/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ActiveSync Requests/sec" ENABLED="True" CATEGORY="MSExchange ActiveSync" PRIMARYDATASOURCE="\MSExchange ActiveSync\Requests/sec" ID="{ba810024-6836-44be-9a7e-f036e0612f0f}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Requests/sec is the number of HTTP requests that are received from the client via ASP.NET per second.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ActiveSync\Requests/sec" COLLECTIONVARNAME="MSExchangeActiveSyncRequestssec" EXPRESSIONPATH="\MSExchange ActiveSync\Requests/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ActiveSync\Requests/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ActiveSync\Requests/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ActiveSync Average Request Time" ENABLED="True" CATEGORY="MSExchange ActiveSync" PRIMARYDATASOURCE="\MSExchange ActiveSync\Average Request Time" ID="{ed6ff34e-ff76-43fa-919e-d7accde6182d}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Request Time is the average time, in milliseconds, that elapsed while waiting for a request to complete. The transaction is tracked from the time Exchange ActiveSync receives the request and sends the response. The network latency between the device or client and Exchange ActiveSync on the Client Access server is not factored into this calculation.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ActiveSync\Average Request Time" COLLECTIONVARNAME="MSExchangeActiveSyncAverageRequestTime" EXPRESSIONPATH="\MSExchange ActiveSync\Average Request Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ActiveSync\Average Request Time" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ActiveSync\Average Request Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ActiveSync Ping Commands Pending" ENABLED="True" CATEGORY="MSExchange ActiveSync" PRIMARYDATASOURCE="\MSExchange ActiveSync\Ping Commands Pending" ID="{23902cf0-1bbd-4539-92cf-06c0a1477ee3}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Ping Commands Pending is the number of Ping commands that are currently pending on the server.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ActiveSync\Ping Commands Pending" COLLECTIONVARNAME="MSExchangeActiveSyncPingCommandsPending" EXPRESSIONPATH="\MSExchange ActiveSync\Ping Commands Pending" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ActiveSync\Ping Commands Pending" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ActiveSync\Ping Commands Pending" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ActiveSync Sync Commands/sec" ENABLED="True" CATEGORY="MSExchange ActiveSync" PRIMARYDATASOURCE="\MSExchange ActiveSync\Sync Commands/sec" ID="{e1789b2f-d2c7-42a6-99f6-6ee883baae77}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Sync Commands/sec is the number of Sync commands that are processed per second. Clients use this command to synchronize items within a folder.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ActiveSync\Sync Commands/sec" COLLECTIONVARNAME="MSExchangeActiveSyncSyncCommandssec" EXPRESSIONPATH="\MSExchange ActiveSync\Sync Commands/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ActiveSync\Sync Commands/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ActiveSync\Sync Commands/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange Availability Service\Availability Requests (sec)" ENABLED="True" CATEGORY="MSExchange Availability Service" PRIMARYDATASOURCE="\MSExchange Availability Service\Availability Requests (sec)" ID="{b65087ff-5784-4eb9-b8da-48df6b4a3f74}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Availability Requests per second is the number  of requests serviced per second. The request can be only for free busy or include suggestions. One request may contain multiple mailboxes.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange Availability Service\Availability Requests (sec)" COLLECTIONVARNAME="MSExchangeAvailabilityServiceAvailabilityRequestssec" EXPRESSIONPATH="\MSExchange Availability Service\Availability Requests (sec)" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange Availability Service\Availability Requests (sec)" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange Availability Service\Availability Requests (sec)" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange Availability Service Average Time to Process a Free Busy Request" ENABLED="True" CATEGORY="MSExchange Availability Service" PRIMARYDATASOURCE="\MSExchange Availability Service\Average Time to Process a Free Busy Request" ID="{1c1938f6-17f9-4d6d-a131-7d42966fe37a}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Time to Process a Free Busy Request is the average time to process a free busy request in seconds. One request may contain multiple mailboxes. Free busy responses do not have meeting suggestions.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange Availability Service\Average Time to Process a Free Busy Request" COLLECTIONVARNAME="MSExchangeAvailabilityServiceAverageTimetoProcessaFreeBusyRequest" EXPRESSIONPATH="\MSExchange Availability Service\Average Time to Process a Free Busy Request" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange Availability Service\Average Time to Process a Free Busy Request" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange Availability Service\Average Time to Process a Free Busy Request" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange Availability Service Average Time to Process a Cross-Forest Free Busy Request" ENABLED="True" CATEGORY="MSExchange Availability Service" PRIMARYDATASOURCE="\MSExchange Availability Service\Average Time to Process a Cross-Forest Free Busy Request" ID="{3485e09d-eaaa-4fe9-9533-cf5d034409e9}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Time to Process a Cross-Forest Free Busy Request is the average time to process a cross-forest free busy request in seconds. One request may contain multiple mailboxes. Free busy responses do not have meeting suggestions.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange Availability Service\Average Time to Process a Cross-Forest Free Busy Request" COLLECTIONVARNAME="MSExchangeAvailabilityServiceAverageTimetoProcessaCrossForestFreeBusyRequest" EXPRESSIONPATH="\MSExchange Availability Service\Average Time to Process a Cross-Forest Free Busy Request" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange Availability Service\Average Time to Process a Cross-Forest Free Busy Request" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange Availability Service\Average Time to Process a Cross-Forest Free Busy Request" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange Availability Service Average Time to Process a Cross-Site Free Busy Request" ENABLED="True" CATEGORY="MSExchange Availability Service" PRIMARYDATASOURCE="\MSExchange Availability Service\Average Time to Process a Cross-Site Free Busy Request" ID="{3df9704c-574a-4416-891b-a2ffc9166a28}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Time to Process a Cross-Site Free Busy Request is the average time to process a cross-site free busy request in seconds. One request may contain multiple mailboxes. Free busy responses do not have meeting suggestions.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange Availability Service\Average Time to Process a Cross-Site Free Busy Request" COLLECTIONVARNAME="MSExchangeAvailabilityServiceAverageTimetoProcessaCrossSiteFreeBusyRequest" EXPRESSIONPATH="\MSExchange Availability Service\Average Time to Process a Cross-Site Free Busy Request" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange Availability Service\Average Time to Process a Cross-Site Free Busy Request" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange Availability Service\Average Time to Process a Cross-Site Free Busy Request" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange Availability Service Average Time to Process a Meeting Suggestions Request" ENABLED="True" CATEGORY="MSExchange Availability Service" PRIMARYDATASOURCE="\MSExchange Availability Service\Average Time to Process a Meeting Suggestions Request" ID="{7730c8bb-c5de-44c9-bbaa-35d150f328ae}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Time to Process a Meeting Suggestions Request is the average time to process a meeting suggestions request in seconds. One request may contain multiple mailboxes. This time includes time for fetching free busy.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange Availability Service\Average Time to Process a Meeting Suggestions Request" COLLECTIONVARNAME="MSExchangeAvailabilityServiceAverageTimetoProcessaMeetingSuggestionsRequest" EXPRESSIONPATH="\MSExchange Availability Service\Average Time to Process a Meeting Suggestions Request" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange Availability Service\Average Time to Process a Meeting Suggestions Request" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange Availability Service\Average Time to Process a Meeting Suggestions Request" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange Availability Service Average Number of Mailboxes Processed per Request" ENABLED="True" CATEGORY="MSExchange Availability Service" PRIMARYDATASOURCE="\MSExchange Availability Service\Average Number of Mailboxes Processed per Request" ID="{f64800c9-253d-4fd8-8b15-c413a4778be7}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Number of Mailboxes Processed per Request is the average number of mailboxes processed per request. Some of the mailboxes may have errors during processing.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange Availability Service\Average Number of Mailboxes Processed per Request" COLLECTIONVARNAME="MSExchangeAvailabilityServiceAverageNumberofMailboxesProcessedperRequest" EXPRESSIONPATH="\MSExchange Availability Service\Average Number of Mailboxes Processed per Request" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange Availability Service\Average Number of Mailboxes Processed per Request" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange Availability Service\Average Number of Mailboxes Processed per Request" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange OWA Current Unique Users" ENABLED="True" CATEGORY="MSExchange OWA" PRIMARYDATASOURCE="\MSExchange OWA\Current Unique Users" ID="{7916e653-10ae-401b-ac01-1d449ad49d74}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Current Unique Users is the number of unique users currently logged on to Outlook Web Access. This value monitors the number of unique active user sessions, so that users are only removed from this count after they log off or their session times out.<br>
<br>
This is used for information purposes only.<br>
<br>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange OWA\Current Unique Users" COLLECTIONVARNAME="MSExchangeOWACurrentUniqueUsers" EXPRESSIONPATH="\MSExchange OWA\Current Unique Users" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange OWA\Current Unique Users" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange OWA\Current Unique Users" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangeFDS:OAB Download Task Queued" ENABLED="True" CATEGORY="MSExchangeFDS:OAB" PRIMARYDATASOURCE="\MSExchangeFDS:OAB(*)\Download Task Queued" ID="{6602f596-12bd-4c47-a86d-fc0afd9d67dc}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Download Task Queued is '1' if task is queued for execution, otherwise '0.'<br>
<br>
This is used for information purposes only.<br>
<br>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangeFDS:OAB(*)\Download Task Queued" COLLECTIONVARNAME="MSExchangeFDSOABDownloadTaskQueuedALL" EXPRESSIONPATH="\MSExchangeFDS:OAB(*)\Download Task Queued" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangeFDS:OAB(*)\Download Task Queued" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangeFDS:OAB(*)\Download Task Queued" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangeFDS:OAB Download Tasks Completed" ENABLED="True" CATEGORY="MSExchangeFDS:OAB" PRIMARYDATASOURCE="\MSExchangeFDS:OAB(*)\Download Tasks Completed" ID="{de39053c-973c-42ac-872a-f8146c824aef}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Shows the number of OAB download tasks completed since the File Distribution service started. The default value is every 480 minutes or 8 hours.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangeFDS:OAB(*)\Download Tasks Completed" COLLECTIONVARNAME="MSExchangeFDSOABDownloadTasksCompletedALL" EXPRESSIONPATH="\MSExchangeFDS:OAB(*)\Download Tasks Completed" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangeFDS:OAB(*)\Download Tasks Completed" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangeFDS:OAB(*)\Download Tasks Completed" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangeFDS:UM Download Task Queued" ENABLED="True" CATEGORY="MSExchangeFDS:UM" PRIMARYDATASOURCE="\MSExchangeFDS:UM\Download Task Queued" ID="{74dd9ee5-5641-44a6-a30d-e29cade817d7}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Download Task Queued is '1' if task is queued for execution, otherwise '0.'<br>
<br>
This is used for information purposes only.<br>
<br>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangeFDS:UM\Download Task Queued" COLLECTIONVARNAME="MSExchangeFDSUMDownloadTaskQueued" EXPRESSIONPATH="\MSExchangeFDS:UM\Download Task Queued" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangeFDS:UM\Download Task Queued" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangeFDS:UM\Download Task Queued" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange OWA Average Search Time" ENABLED="True" CATEGORY="MSExchange OWA" PRIMARYDATASOURCE="\MSExchange OWA\Average Search Time" ID="{77f555ef-3c2d-4943-9cc5-1910805978b5}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Search Time is the average time that elapsed while waiting for a search to complete.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange OWA\Average Search Time" COLLECTIONVARNAME="MSExchangeOWAAverageSearchTime" EXPRESSIONPATH="\MSExchange OWA\Average Search Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange OWA\Average Search Time" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange OWA\Average Search Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange OWA Requests/sec" ENABLED="True" CATEGORY="MSExchange OWA" PRIMARYDATASOURCE="\MSExchange OWA\Requests/sec" ID="{2c863703-0654-4666-84f2-3a43fd481823}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Requests/sec is the number of requests handled by Outlook Web Access per second.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange OWA\Requests/sec" COLLECTIONVARNAME="MSExchangeOWARequestssec" EXPRESSIONPATH="\MSExchange OWA\Requests/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange OWA\Requests/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange OWA\Requests/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangeWS Requests/sec" ENABLED="True" CATEGORY="MSExchangeWS" PRIMARYDATASOURCE="\MSExchangeWS\Requests/sec" ID="{426e87f9-6750-49de-86c8-1de5721126bc}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Requests per second is the number of requests processed each second.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangeWS\Requests/sec" COLLECTIONVARNAME="MSExchangeWSRequestssec" EXPRESSIONPATH="\MSExchangeWS\Requests/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangeWS\Requests/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangeWS\Requests/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Web Service Current Connections" ENABLED="True" CATEGORY="Web Service" PRIMARYDATASOURCE="\Web Service(_Total)\Current Connections" ID="{3f83f71f-23f5-47fa-9eef-6b4a6c0239e5}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Current Connections is the current number of connections established with the Web service.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Web Service(_Total)\Current Connections" COLLECTIONVARNAME="WebServiceCurrentConnections_Total" EXPRESSIONPATH="\Web Service(_Total)\Current Connections" DATATYPE="integer" />
    <CHART CHARTTITLE="\Web Service(_Total)\Current Connections" ISTHRESHOLDSADDED="False" DATASOURCE="\Web Service(_Total)\Current Connections" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Web Service ISAPI Extension Requests/sec" ENABLED="True" CATEGORY="Web Service" PRIMARYDATASOURCE="\Web Service(_Total)\ISAPI Extension Requests/sec" ID="{b4cbc64f-dc88-4b5c-986e-6145bf2e0f1e}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate that ISAPI Extension requests are received by the Web service.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Web Service(_Total)\ISAPI Extension Requests/sec" COLLECTIONVARNAME="WebServiceISAPIExtensionRequestssec_Total" EXPRESSIONPATH="\Web Service(_Total)\ISAPI Extension Requests/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Web Service(_Total)\ISAPI Extension Requests/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Web Service(_Total)\ISAPI Extension Requests/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange OWA Average Response Time" ENABLED="True" CATEGORY="MSExchange OWA" PRIMARYDATASOURCE="\MSExchange OWA\Average Response Time" ID="{e6fcdb70-97c9-432c-b12b-574713eb0656}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Response Time is the average time (in milliseconds) that elapsed between the beginning and end of an OEH or ASPX request.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange OWA\Average Response Time" COLLECTIONVARNAME="MSExchangeOWAAverageResponseTime" EXPRESSIONPATH="\MSExchange OWA\Average Response Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange OWA\Average Response Time" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange OWA\Average Response Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME=".NET CLR Memory % Time in GC" ENABLED="True" CATEGORY=".NET CLR Memory" PRIMARYDATASOURCE="\.NET CLR Memory(_Global_)\% Time in GC" ID="{0289fb3d-95ff-4482-a540-692f65d68874}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[% Time in GC is the percentage of elapsed time that was spent in performing a garbage collection (GC) since the last GC cycle. This counter is usually an indicator of the work done by the Garbage Collector on behalf of the application to collect and compact memory. This counter is updated only at the end of every GC and the counter value reflects the last observed value; its not an average.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\.NET CLR Memory(_Global_)\% Time in GC" COLLECTIONVARNAME="NETCLRMemoryPercentTimeinGC_Global_" EXPRESSIONPATH="\.NET CLR Memory(_Global_)\% Time in GC" DATATYPE="integer" />
    <CHART CHARTTITLE="\.NET CLR Memory(_Global_)\% Time in GC" ISTHRESHOLDSADDED="False" DATASOURCE="\.NET CLR Memory(_Global_)\% Time in GC" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="ASP.NET Worker Process Restarts" ENABLED="True" CATEGORY="ASP.NET" PRIMARYDATASOURCE="\ASP.NET\Worker Process Restarts" ID="{4c46423a-7b9f-497b-9a22-4e3774a00bb6}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Number of times a worker process has restarted on the machine.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\ASP.NET\Worker Process Restarts" COLLECTIONVARNAME="ASPNETWorkerProcessRestarts" EXPRESSIONPATH="\ASP.NET\Worker Process Restarts" DATATYPE="integer" />
    <CHART CHARTTITLE="\ASP.NET\Worker Process Restarts" ISTHRESHOLDSADDED="False" DATASOURCE="\ASP.NET\Worker Process Restarts" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="ASP.NET Requests Current" ENABLED="True" CATEGORY="ASP.NET" PRIMARYDATASOURCE="\ASP.NET\Requests Current" ID="{9dad0028-caed-4877-b7e9-d057d4d803d8}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The current number of requests, including those that are queued, currently executing, or waiting to be written to the client.  Under the ASP.NET process model, when this counter exceeds the requestQueueLimit defined in the processModel configuration section, ASP.NET will begin rejecting requests. <br>
<br><b>
processModel Element (ASP.NET Settings Schema)</b><br>
<br>
http://msdn2.microsoft.com/en-us/library/7w2sway1(VS.80).aspx<br>
<br>
If the number of requests allowed in the queue is exceeded, ASP.NET begins returning <b>"503 â€“ Server Too Busy" </b>errors to new requests. When this limit is reached, the system is operating in abnormal conditions. This might be a symptom of a malfunction or, maybe, just high load. Restarting (bouncing) the worker process might become the only way to prevent further problems.

]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\ASP.NET\Requests Current" COLLECTIONVARNAME="ASPNETRequestsCurrent" EXPRESSIONPATH="\ASP.NET\Requests Current" DATATYPE="integer" />
    <CHART CHARTTITLE="\ASP.NET\Requests Current" ISTHRESHOLDSADDED="False" DATASOURCE="\ASP.NET\Requests Current" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="ASP.NET Request Wait Time" ENABLED="True" CATEGORY="ASP.NET" PRIMARYDATASOURCE="\ASP.NET\Request Wait Time" ID="{b7e61f97-2515-4e64-934d-e0b39640e3d5}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The number of milliseconds the most recent request was waiting in the queue.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\ASP.NET\Request Wait Time" COLLECTIONVARNAME="ASPNETRequestWaitTime" EXPRESSIONPATH="\ASP.NET\Request Wait Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\ASP.NET\Request Wait Time" ISTHRESHOLDSADDED="False" DATASOURCE="\ASP.NET\Request Wait Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="ASP.NET Applications Requests In Application Queue" ENABLED="True" CATEGORY="ASP.NET Applications" PRIMARYDATASOURCE="\ASP.NET Applications(__Total__)\Requests In Application Queue" ID="{b1db8c41-f3fa-4595-a0db-465b745acccf}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The number of requests in the application request queue.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\ASP.NET Applications(__Total__)\Requests In Application Queue" COLLECTIONVARNAME="ASPNETApplicationsRequestsInApplicationQueue__Total__" EXPRESSIONPATH="\ASP.NET Applications(__Total__)\Requests In Application Queue" DATATYPE="integer" />
    <CHART CHARTTITLE="\ASP.NET Applications(__Total__)\Requests In Application Queue" ISTHRESHOLDSADDED="False" DATASOURCE="\ASP.NET Applications(__Total__)\Requests In Application Queue" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange OWA Queued Conversion Requests" ENABLED="True" CATEGORY="MSExchange OWA" PRIMARYDATASOURCE="\MSExchange OWA\Queued Conversion Requests" ID="{2ca99e84-5e68-4961-9a57-6f4308ce10f2}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Queued Conversion Requests is the number of requests for conversion that are currently waiting to be processed.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange OWA\Queued Conversion Requests" COLLECTIONVARNAME="MSExchangeOWAQueuedConversionRequests" EXPRESSIONPATH="\MSExchange OWA\Queued Conversion Requests" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange OWA\Queued Conversion Requests" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange OWA\Queued Conversion Requests" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange OWA Active Conversions" ENABLED="True" CATEGORY="MSExchange OWA" PRIMARYDATASOURCE="\MSExchange OWA\Active Conversions" ID="{cd3c9451-ee37-4dd5-83ad-3ebbf48a8ac4}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Active Conversions is the number of conversions that are currently being processed by the WebReady Document Viewing service.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange OWA\Active Conversions" COLLECTIONVARNAME="MSExchangeOWAActiveConversions" EXPRESSIONPATH="\MSExchange OWA\Active Conversions" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange OWA\Active Conversions" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange OWA\Active Conversions" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange OWA Average Conversion Time" ENABLED="True" CATEGORY="MSExchange OWA" PRIMARYDATASOURCE="\MSExchange OWA\Average Conversion Time" ID="{5ae14149-5391-44f8-bdcf-96d564e9abe5}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Conversion Time is the average length of time, in milliseconds, it has taken to convert a document since the process was restarted.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange OWA\Average Conversion Time" COLLECTIONVARNAME="MSExchangeOWAAverageConversionTime" EXPRESSIONPATH="\MSExchange OWA\Average Conversion Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange OWA\Average Conversion Time" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange OWA\Average Conversion Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="ASP.NET Requests Rejected" ENABLED="True" CATEGORY="ASP.NET" PRIMARYDATASOURCE="\ASP.NET\Requests Rejected" ID="{5875b46d-107c-4b5c-837a-b9a5c46bcef4}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The number of requests rejected because the request queue was full.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\ASP.NET\Requests Rejected" COLLECTIONVARNAME="ASPNETRequestsRejected" EXPRESSIONPATH="\ASP.NET\Requests Rejected" DATATYPE="integer" />
    <CHART CHARTTITLE="\ASP.NET\Requests Rejected" ISTHRESHOLDSADDED="False" DATASOURCE="\ASP.NET\Requests Rejected" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangePop3 Connections Current" ENABLED="True" CATEGORY="MSExchangePop3" PRIMARYDATASOURCE="\MSExchangePop3\Connections Current" ID="{9d4bedce-f049-419b-81fd-4604ba9d6ccd}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Current Connections is the number of connections that are currently open on the POP service.<br>
<br>
This counter is used to report load on the server.<br>
<br>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangePop3\Connections Current" COLLECTIONVARNAME="MSExchangePop3ConnectionsCurrent" EXPRESSIONPATH="\MSExchangePop3\Connections Current" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangePop3\Connections Current" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangePop3\Connections Current" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangePop3\Average Command Processing Time  Average Command Processing Time (milliseconds)" ENABLED="True" CATEGORY="MSExchangePop3" PRIMARYDATASOURCE="\MSExchangePop3\Average Command Processing Time (milliseconds)" ID="{af4710c7-729b-4986-8f3e-02c725ae775d}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Command Processing Time is the average processing time, in milliseconds, for the last 1024 commands received from clients.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangePop3\Average Command Processing Time (milliseconds)" COLLECTIONVARNAME="MSExchangePop3AverageCommandProcessingTimemilliseconds" EXPRESSIONPATH="\MSExchangePop3\Average Command Processing Time (milliseconds)" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangePop3\Average Command Processing Time (milliseconds)" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangePop3\Average Command Processing Time (milliseconds)" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangeImap4\Average Command Processing Time  Average Command Processing Time (milliseconds)" ENABLED="True" CATEGORY="MSExchangeImap4" PRIMARYDATASOURCE="\MSExchangeImap4\Average Command Processing Time (milliseconds)" ID="{11d737cd-4310-4c76-a4bd-1b67f0556564}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Average Command Processing Time is the average processing time, in milliseconds, for the last 1024 commands received from clients.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangeImap4\Average Command Processing Time (milliseconds)" COLLECTIONVARNAME="MSExchangeImap4AverageCommandProcessingTimemilliseconds" EXPRESSIONPATH="\MSExchangeImap4\Average Command Processing Time (milliseconds)" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangeImap4\Average Command Processing Time (milliseconds)" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangeImap4\Average Command Processing Time (milliseconds)" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangeImap4 Current Connections" ENABLED="True" CATEGORY="MSExchangeImap4" PRIMARYDATASOURCE="\MSExchangeImap4\Current Connections" ID="{5f8d753c-7996-44ff-85de-a5e2ab097048}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Current Connections is the number of connections that are currently open on the IMAP service.<br>
<br>
This counter is used to report load on the server.<br>
<br>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangeImap4\Current Connections" COLLECTIONVARNAME="MSExchangeImap4CurrentConnections" EXPRESSIONPATH="\MSExchangeImap4\Current Connections" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangeImap4\Current Connections" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangeImap4\Current Connections" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchangeAutodiscover Requests/sec" ENABLED="True" CATEGORY="MSExchangeAutodiscover" PRIMARYDATASOURCE="\MSExchangeAutodiscover\Requests/sec" ID="{4ffa67fd-9f19-4b92-ac4d-f81c8fcd5249}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Requests per second is the number of Autodiscover requests processed each second.<br>
<br>
This counter is used to report load on the server.<br>
<br>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchangeAutodiscover\Requests/sec" COLLECTIONVARNAME="MSExchangeAutodiscoverRequestssec" EXPRESSIONPATH="\MSExchangeAutodiscover\Requests/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchangeAutodiscover\Requests/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchangeAutodiscover\Requests/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ADAccess Domain Controllers LDAP Search Time" ENABLED="True" CATEGORY="MSExchange ADAccess Domain Controllers" PRIMARYDATASOURCE="\MSExchange ADAccess Domain Controllers(*)\LDAP Search Time" ID="{4e89bdde-3fb0-4ab8-8aeb-1521083af7eb}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[LDAP Search Time is the time (in ms) taken to send an LDAP search request and receive a response]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ADAccess Domain Controllers(*)\LDAP Search Time" COLLECTIONVARNAME="MSExchangeADAccessDomainControllersLDAPSearchTimeALL" EXPRESSIONPATH="\MSExchange ADAccess Domain Controllers(*)\LDAP Search Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ADAccess Domain Controllers(*)\LDAP Search Time" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ADAccess Domain Controllers(*)\LDAP Search Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ADAccess Caches LDAP Searches/Sec" ENABLED="True" CATEGORY="MSExchange ADAccess Caches" PRIMARYDATASOURCE="\MSExchange ADAccess Caches(*)\LDAP Searches/Sec" ID="{7cbd6108-5dc7-41e3-9ffd-e33735920d9d}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[LDAP Searches/Sec is the number of LDAP search requests issued per second.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ADAccess Caches(*)\LDAP Searches/Sec" COLLECTIONVARNAME="MSExchangeADAccessCachesLDAPSearchesSecALL" EXPRESSIONPATH="\MSExchange ADAccess Caches(*)\LDAP Searches/Sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ADAccess Caches(*)\LDAP Searches/Sec" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ADAccess Caches(*)\LDAP Searches/Sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ADAccess Domain Controllers LDAP Read Time" ENABLED="True" CATEGORY="MSExchange ADAccess Domain Controllers" PRIMARYDATASOURCE="\MSExchange ADAccess Domain Controllers(*)\LDAP Read Time" ID="{6040dc05-1a76-4a68-b8ab-dff2a004e1ac}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[LDAP Read Time for a given DC is the time (in ms) taken to send an LDAP read request to the specified DC and receive a response]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ADAccess Domain Controllers(*)\LDAP Read Time" COLLECTIONVARNAME="MSExchangeADAccessDomainControllersLDAPReadTimeALL" EXPRESSIONPATH="\MSExchange ADAccess Domain Controllers(*)\LDAP Read Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ADAccess Domain Controllers(*)\LDAP Read Time" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ADAccess Domain Controllers(*)\LDAP Read Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ADAccess Processes LDAP Read Time" ENABLED="True" CATEGORY="MSExchange ADAccess Processes" PRIMARYDATASOURCE="\MSExchange ADAccess Processes(*)\LDAP Read Time" ID="{ac20e3fe-47fe-4b96-8ead-2162e6db3bd5}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[LDAP Read Time is the time (in ms) taken to send an LDAP read request and receive a response]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ADAccess Processes(*)\LDAP Read Time" COLLECTIONVARNAME="MSExchangeADAccessProcessesLDAPReadTimeALL" EXPRESSIONPATH="\MSExchange ADAccess Processes(*)\LDAP Read Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ADAccess Processes(*)\LDAP Read Time" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ADAccess Processes(*)\LDAP Read Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ADAccess Processes LDAP Search Time" ENABLED="True" CATEGORY="MSExchange ADAccess Processes" PRIMARYDATASOURCE="\MSExchange ADAccess Processes(*)\LDAP Search Time" ID="{5ea2f376-6466-4a78-aec0-ac6bd500cfd2}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[LDAP Search Time is the time (in ms) taken to send an LDAP search request and receive a response]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ADAccess Processes(*)\LDAP Search Time" COLLECTIONVARNAME="MSExchangeADAccessProcessesLDAPSearchTimeALL" EXPRESSIONPATH="\MSExchange ADAccess Processes(*)\LDAP Search Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ADAccess Processes(*)\LDAP Search Time" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ADAccess Processes(*)\LDAP Search Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ADAccess Domain Controllers LDAP Searches timed out per minute" ENABLED="True" CATEGORY="MSExchange ADAccess Domain Controllers" PRIMARYDATASOURCE="\MSExchange ADAccess Domain Controllers(*)\LDAP Searches timed out per minute" ID="{65f575f2-735a-48ad-a858-fdd647e68e8d}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[LDAP Searches timed out per minute is the number of LDAP searches returned LDAP_TIMEOUT during the last minute<br>
<br>
This counter is indicitive of an overloaded domain controller or there are network connectivity problems to the DC.<br>
<br>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ADAccess Domain Controllers(*)\LDAP Searches timed out per minute" COLLECTIONVARNAME="MSExchangeADAccessDomainControllersLDAPSearchestimedoutperminuteALL" EXPRESSIONPATH="\MSExchange ADAccess Domain Controllers(*)\LDAP Searches timed out per minute" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ADAccess Domain Controllers(*)\LDAP Searches timed out per minute" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ADAccess Domain Controllers(*)\LDAP Searches timed out per minute" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ADAccess Domain Controllers Long running LDAP operations/Min" ENABLED="True" CATEGORY="MSExchange ADAccess Domain Controllers" PRIMARYDATASOURCE="\MSExchange ADAccess Domain Controllers(*)\Long running LDAP operations/Min" ID="{c50b449c-538c-4123-9b4e-9700456a9410}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Long running LDAP operations/Min is the number of LDAP operations on this DC that took longer than the specified threshold per minute (default threshold is 15 seconds)<br>
<br>
This counter is useful for determining domain controller latencies that may affect overall Exchange performance.<br>
<br>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ADAccess Domain Controllers(*)\Long running LDAP operations/Min" COLLECTIONVARNAME="MSExchangeADAccessDomainControllersLongrunningLDAPoperationsMinALL" EXPRESSIONPATH="\MSExchange ADAccess Domain Controllers(*)\Long running LDAP operations/Min" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ADAccess Domain Controllers(*)\Long running LDAP operations/Min" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ADAccess Domain Controllers(*)\Long running LDAP operations/Min" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="MSExchange ADAccess Domain Controllers LDAP Search calls/Sec" ENABLED="True" CATEGORY="MSExchange ADAccess Domain Controllers" PRIMARYDATASOURCE="\MSExchange ADAccess Domain Controllers(*)\LDAP Search calls/Sec" ID="{bc100cf6-3935-4465-b955-54214d2b95ed}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[LDAP Search calls/Sec is the number of Depth 1 or 2 LDAP Search calls made by this process per second<br>
<br>
This counter is useful to determine if there is an increase in LDAP calls to the domain controllers possibly affecting overall latency on the server.<br>
<br>
]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\MSExchange ADAccess Domain Controllers(*)\LDAP Search calls/Sec" COLLECTIONVARNAME="MSExchangeADAccessDomainControllersLDAPSearchcallsSecALL" EXPRESSIONPATH="\MSExchange ADAccess Domain Controllers(*)\LDAP Search calls/Sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\MSExchange ADAccess Domain Controllers(*)\LDAP Search calls/Sec" ISTHRESHOLDSADDED="False" DATASOURCE="\MSExchange ADAccess Domain Controllers(*)\LDAP Search calls/Sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Transition Faults/sec" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Transition Faults/sec" ID="{3806d747-4ad8-4a0b-af19-59c5b69c0f7f}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Transition Faults/sec is the rate at which page faults are resolved by recovering pages that were being used by another process sharing the page, or were on the modified page list or the standby list, or were being written to disk at the time of the page fault. The pages were recovered without additional disk activity. Transition faults are counted in numbers of faults; because only one page is faulted in each operation, it is also equal to the number of pages faulted.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Transition Faults/sec" COLLECTIONVARNAME="MemoryTransitionFaultssec" EXPRESSIONPATH="\Memory\Transition Faults/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\Transition Faults/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Transition Faults/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Cache Bytes" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Cache Bytes" ID="{efde166c-77eb-42c2-84f8-a8cfcfbd18d8}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Cache Bytes is the sum of the Memory\\System Cache Resident Bytes, Memory\\System Driver Resident Bytes, Memory\\System Code Resident Bytes, and Memory\\Pool Paged Resident Bytes counters.  This counter displays the last observed value only; it is not an average. ]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Cache Bytes" COLLECTIONVARNAME="MemoryCacheBytes" EXPRESSIONPATH="\Memory\Cache Bytes" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\Cache Bytes" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Cache Bytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Process % Processor Time" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(*)\% Processor Time" ID="{e9c64104-b349-4a64-854f-07acd08f461e}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[% Processor Time is the percentage of elapsed time that all of process threads used the processor to execution instructions. An instruction is the basic unit of execution in a computer, a thread is the object that executes instructions, and a process is the object created when a program is run. Code executed to handle some hardware interrupts and trap conditions are included in this count.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(*)\% Processor Time" COLLECTIONVARNAME="ProcessPercentProcessorTimeALL" EXPRESSIONPATH="\Process(*)\% Processor Time" DATATYPE="integer" />
    <CHART CHARTTITLE="\Process(*)\% Processor Time" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(*)\% Processor Time" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Server Pool Nonpaged Failures" ENABLED="True" CATEGORY="Server" PRIMARYDATASOURCE="\Server\Pool Nonpaged Failures" ID="{27893126-a732-4b3c-bba7-7ad50e666f51}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The number of times allocations from nonpaged pool have failed.  Indicates that the computer's physical memory is too small.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Server\Pool Nonpaged Failures" COLLECTIONVARNAME="ServerPoolNonpagedFailures" EXPRESSIONPATH="\Server\Pool Nonpaged Failures" DATATYPE="integer" />
    <CHART CHARTTITLE="\Server\Pool Nonpaged Failures" ISTHRESHOLDSADDED="False" DATASOURCE="\Server\Pool Nonpaged Failures" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Server Pool Paged Failures" ENABLED="True" CATEGORY="Server" PRIMARYDATASOURCE="\Server\Pool Paged Failures" ID="{cf28abab-f5ce-4f05-94cc-0b607a3f1e0b}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The number of times allocations from paged pool have failed.  Indicates that the computer's physical memory or paging file are too small.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Server\Pool Paged Failures" COLLECTIONVARNAME="ServerPoolPagedFailures" EXPRESSIONPATH="\Server\Pool Paged Failures" DATATYPE="integer" />
    <CHART CHARTTITLE="\Server\Pool Paged Failures" ISTHRESHOLDSADDED="False" DATASOURCE="\Server\Pool Paged Failures" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Pages Output/sec" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Pages Output/sec" ID="{40e79f35-b870-406e-9033-98761b320e03}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Pages Output/sec is the rate at which pages are written to disk to free up space in physical memory. Pages are written back to disk only if they are changed in physical memory, so they are likely to hold data, not code. A high rate of pages output might indicate a memory shortage. Windows writes more pages back to disk to free up space when physical memory is in short supply.  This counter shows the number of pages, and can be compared to other counts of pages, without conversion.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Pages Output/sec" COLLECTIONVARNAME="MemoryPagesOutputsec" EXPRESSIONPATH="\Memory\Pages Output/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\Pages Output/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Pages Output/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Process IO Write Bytes/sec" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(EdgeTransport)\IO Write Bytes/sec" ID="{89b24f66-7a95-4018-ba70-375ac143ecdc}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate at which the process is writing bytes to I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(EdgeTransport)\IO Write Bytes/sec" COLLECTIONVARNAME="ProcessIOWriteBytessecEdgeTransport" EXPRESSIONPATH="\Process(EdgeTransport)\IO Write Bytes/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Process(EdgeTransport)\IO Write Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(EdgeTransport)\IO Write Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Process IO Data Bytes/sec" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(EdgeTransport)\IO Data Bytes/sec" ID="{a5eed99c-bb20-4609-8dcc-7d3a633d66d6}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate at which the process is reading and writing bytes in I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(EdgeTransport)\IO Data Bytes/sec" COLLECTIONVARNAME="ProcessIODataBytessecEdgeTransport" EXPRESSIONPATH="\Process(EdgeTransport)\IO Data Bytes/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Process(EdgeTransport)\IO Data Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(EdgeTransport)\IO Data Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Process IO Read Bytes/sec" ENABLED="True" CATEGORY="Process" PRIMARYDATASOURCE="\Process(EdgeTransport)\IO Read Bytes/sec" ID="{c701f4e1-9b63-42f2-b356-0695b3938712}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate at which the process is reading bytes from I/O operations. This counter counts all I/O activity generated by the process to include file, network and device I/Os.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Process(EdgeTransport)\IO Read Bytes/sec" COLLECTIONVARNAME="ProcessIOReadBytessecEdgeTransport" EXPRESSIONPATH="\Process(EdgeTransport)\IO Read Bytes/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Process(EdgeTransport)\IO Read Bytes/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Process(EdgeTransport)\IO Read Bytes/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Transition Pages RePurposed/sec" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Transition Pages RePurposed/sec" ID="{2b7b675a-6e37-4f12-abb3-2d7b0636b0f7}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Transition Pages RePurposed is the rate at which the number of transition cache pages were reused for a different purpose.  These pages would have otherwise remained in the page cache to provide a (fast) soft fault (instead of retrieving it from backing store) in the event the page was accessed in the future.  Note these pages can contain private or sharable memory.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Transition Pages RePurposed/sec" COLLECTIONVARNAME="MemoryTransitionPagesRePurposedsec" EXPRESSIONPATH="\Memory\Transition Pages RePurposed/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\Transition Pages RePurposed/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Transition Pages RePurposed/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Network Interface Packets Outbound Errors" ENABLED="True" CATEGORY="Network Interface" PRIMARYDATASOURCE="\Network Interface(*)\Packets Outbound Errors" ID="{e2a50495-d29f-4b99-a50d-fde6820dcedd}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Packets Outbound Errors is the number of outbound packets that could not be transmitted because of errors.<BR>
<BR>
If errors are occuring during this analysis, network connectivity could be affected with a potential for random Outlook RPC dialog boxes. See <A HREF="http://technet.microsoft.com/en-us/library/aa997363.aspx">http://technet.microsoft.com/en-us/library/aa997363.aspx</A> and <A HREF="http://technet.microsoft.com/en-us/library/aa995850.asp">http://technet.microsoft.com/en-us/library/aa995850.asp</A> for more information<BR>]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Network Interface(*)\Packets Outbound Errors" COLLECTIONVARNAME="NetworkInterfacePacketsOutboundErrorsALL" EXPRESSIONPATH="\Network Interface(*)\Packets Outbound Errors" DATATYPE="integer" />
    <CHART CHARTTITLE="\Network Interface(*)\Packets Outbound Errors" ISTHRESHOLDSADDED="False" DATASOURCE="\Network Interface(*)\Packets Outbound Errors" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Web Service Other Request Methods/sec" ENABLED="True" CATEGORY="Web Service" PRIMARYDATASOURCE="\Web Service(_Total)\Other Request Methods/sec" ID="{b26ab121-c972-45c1-9b12-5cb80abdf671}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate HTTP requests are made that do not use the OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, MOVE, COPY, MKCOL, PROPFIND, PROPPATCH, SEARCH, LOCK or UNLOCK methods.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Web Service(_Total)\Other Request Methods/sec" COLLECTIONVARNAME="WebServiceOtherRequestMethodssec_Total" EXPRESSIONPATH="\Web Service(_Total)\Other Request Methods/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Web Service(_Total)\Other Request Methods/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Web Service(_Total)\Other Request Methods/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Web Service Connection Attempts/sec" ENABLED="True" CATEGORY="Web Service" PRIMARYDATASOURCE="\Web Service(_Total)\Connection Attempts/sec" ID="{0f442f87-c3b9-44be-a80b-4b81e23faa72}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[The rate that connections to the Web service are being attempted.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Web Service(_Total)\Connection Attempts/sec" COLLECTIONVARNAME="WebServiceConnectionAttemptssec_Total" EXPRESSIONPATH="\Web Service(_Total)\Connection Attempts/sec" DATATYPE="integer" />
    <CHART CHARTTITLE="\Web Service(_Total)\Connection Attempts/sec" ISTHRESHOLDSADDED="False" DATASOURCE="\Web Service(_Total)\Connection Attempts/sec" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Committed Bytes" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\Committed Bytes" ID="{58916914-9659-4c79-ae29-525db6c836c0}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[Committed Bytes is the amount of committed virtual memory, in bytes. Committed memory is the physical memory which has space reserved on the disk paging file(s). There can be one or more paging files on each physical drive. This counter displays the last observed value only; it is not an average.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Committed Bytes" COLLECTIONVARNAME="MemoryCommittedBytes" EXPRESSIONPATH="\Memory\Committed Bytes" DATATYPE="integer" />
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\Commit Limit" COLLECTIONVARNAME="MemoryCommitLimit" EXPRESSIONPATH="\Memory\Commit Limit" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\Committed Bytes" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\Committed Bytes" CHARTLABELS="instance" />
  </ANALYSIS>
  <ANALYSIS NAME="Memory Percent Committed Bytes In Use" ENABLED="True" CATEGORY="Memory" PRIMARYDATASOURCE="\Memory\% Committed Bytes In Use" ID="{eb4b8049-2443-4113-b5ac-a01e6978e257}" FROMALLCOUNTERSTATS="False">
    <DESCRIPTION><![CDATA[% Committed Bytes In Use is the ratio of Memory\\Committed Bytes to the Memory\\Commit Limit. Committed memory is the physical memory in use for which space has been reserved in the paging file should it need to be written to disk. The commit limit is determined by the size of the paging file.  If the paging file is enlarged, the commit limit increases, and the ratio is reduced). This counter displays the current percentage value only; it is not an average.<BR>
<BR>
This analysis checks if the amount of Commited memory is becoming close to the Commit Limit (RAM plus total page file sizes), If so, then identify if you have a memory leak. If no memory leak is identified, then consider adding more physical RAM or increase the size of your page files.]]></DESCRIPTION>
    <DATASOURCE TYPE="CounterLog" NAME="\Memory\% Committed Bytes In Use" COLLECTIONVARNAME="MemoryPercentCommittedBytesInUse" EXPRESSIONPATH="\Memory\% Committed Bytes In Use" DATATYPE="integer" />
    <CHART CHARTTITLE="\Memory\% Committed Bytes In Use" ISTHRESHOLDSADDED="False" DATASOURCE="\Memory\% Committed Bytes In Use" CHARTLABELS="instance" />
  </ANALYSIS>
</PAL>